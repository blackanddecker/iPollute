{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/my-new-project/screens/CategoriesScreen.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport HeaderButton from \"../components/HeaderButton\";\nimport { CATEGORIES } from \"../data/dummy-data\";\nimport CategoryGridTile from \"../components/CategoryGridTile\";\nimport Colors from \"../constants/Colors\";\n\nvar CategoriesScreen = function (_Component) {\n  _inherits(CategoriesScreen, _Component);\n\n  var _super = _createSuper(CategoriesScreen);\n\n  function CategoriesScreen() {\n    var _this;\n\n    _classCallCheck(this, CategoriesScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: '',\n      password: '',\n      user: '',\n      transport: 'Bus',\n      hours: '',\n      transportData: [],\n      isLoading: true\n    };\n\n    _this.componentDidMount = function () {\n      fetch('http://127.0.0.1:5000/getTransportObjects', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        for (var key in responseJson['transportObjects']) {\n          console.log(\"key:\" + responseJson['transportObjects'][key]);\n\n          _this.state.transportData.push(responseJson['transportObjects'][key]);\n        }\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"Transport data didnt fetch\");\n      });\n    };\n\n    _this.updateTransport = function (transport) {\n      _this.setState({\n        transport: transport\n      });\n    };\n\n    _this.handleEmail = function (text) {\n      _this.setState({\n        email: text\n      });\n    };\n\n    _this.handlePassword = function (text) {\n      _this.setState({\n        password: text\n      });\n    };\n\n    _this.handleHours = function (float) {\n      _this.setState({\n        hours: float\n      });\n    };\n\n    _this.handleTransport = function (text) {\n      _this.setState({\n        transport: text\n      });\n    };\n\n    _this.login = function (transport, hours) {\n      alert('Transport: ' + transport + ' Hours: ' + hours);\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoriesScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.transportData);\n\n      if (!this.state.loading) {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        }, \"Choose Transportation: \"), React.createElement(Picker, {\n          selectedValue: this.state.transport,\n          onValueChange: this.updateTransport,\n          style: styles.input,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        }, this.state.transportData.map(function (l, i) {\n          return React.createElement(Picker.Item, {\n            value: l,\n            label: \"Cliente \" + i,\n            key: i,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 65\n            }\n          });\n        })), React.createElement(Text, {\n          style: styles.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        }, this.state.transport), React.createElement(Text, {\n          style: styles.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }\n        }, \"Add Hours: \"), React.createElement(TextInput, {\n          style: styles.input,\n          underlineColorAndroid: \"transparent\",\n          placeholder: \" Hours (fe 1.3)\",\n          placeholderTextColor: Colors.primaryColor,\n          autoCapitalize: \"none\",\n          onChangeText: this.handleHours,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.submitButton,\n          onPress: function onPress() {\n            return _this2.login(_this2.state.transport, _this2.state.hours);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.submitButtonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }\n        }, \" Submit \")));\n      } else {}\n    }\n  }]);\n\n  return CategoriesScreen;\n}(Component);\n\nCategoriesScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'My Energy',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    paddingTop: 23\n  },\n  input: {\n    margin: 20,\n    height: 40,\n    borderColor: Colors.primaryColor,\n    borderWidth: 1\n  },\n  submitButton: {\n    backgroundColor: Colors.primaryColor,\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    color: 'white'\n  },\n  text: {\n    fontSize: 30,\n    alignSelf: 'left',\n    color: Colors.primaryColor,\n    padding: 10,\n    margin: 15\n  }\n});\nexport default CategoriesScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/my-new-project/screens/CategoriesScreen.js"],"names":["React","Component","HeaderButtons","Item","HeaderButton","CATEGORIES","CategoryGridTile","Colors","CategoriesScreen","state","email","password","user","transport","hours","transportData","isLoading","componentDidMount","fetch","headers","method","then","response","json","responseJson","console","log","key","push","catch","error","alert","updateTransport","setState","handleEmail","text","handlePassword","handleHours","float","handleTransport","login","loading","styles","container","input","map","l","i","primaryColor","submitButton","submitButtonText","navigationOptions","navData","headerTitle","headerLeft","navigation","toggleDrawer","StyleSheet","create","screen","flex","justifyContent","alignItems","paddingTop","margin","height","borderColor","borderWidth","backgroundColor","padding","color","fontSize","alignSelf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  View,\n  Text,\n  TextInput,\n  FlatList,\n  ActivityIndicator,\n  StyleSheet,\n  Picker,\n  TouchableOpacity\n} from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\n\nimport HeaderButton from '../components/HeaderButton';\nimport { CATEGORIES } from '../data/dummy-data';\nimport CategoryGridTile from '../components/CategoryGridTile';\nimport Colors from '../constants/Colors';\n\n\nclass CategoriesScreen extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    user: '',\n    transport: 'Bus',\n    hours: '',\n    transportData: [],\n    isLoading: true\n }\n\n \n componentDidMount = () => {\n  fetch('http://127.0.0.1:5000/getTransportObjects', {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n     method: 'GET'\n  })\n  .then((response) => response.json())\n  .then((responseJson) => {\n     console.log(responseJson);\n    //  this.setState({ \n    //    transportData: responseJson,\n    //    isLoading: !this.state.isLoading })\n    for (const key in responseJson['transportObjects']){\n      console.log(\"key:\"+responseJson['transportObjects'][key])\n      this.state.transportData.push(responseJson['transportObjects'][key])\n    }\n  })\n  .catch((error) => {\n     console.error(error);\n     alert(\"Transport data didnt fetch\");\n\n  });\n}\n\n  updateTransport = (transport) => {\n    this.setState({ transport: transport })\n  }\n\n  handleEmail = (text) => {\n    this.setState({ email: text })\n  }\n  handlePassword = (text) => {\n    this.setState({ password: text })\n  }\n  handleHours = (float) => {\n  this.setState({ hours: float })\n  }\n  handleTransport = (text) => {\n  this.setState({ transport: text })\n  }\n  login = (transport, hours) => {\n    alert('Transport: ' + transport + ' Hours: ' + hours)\n  }\n  render() {\n\n    console.log(this.state.transportData);\n\n    if(!this.state.loading) {\n      return (\n        <View style = {styles.container}>\n            \n            <Text style = {styles.text}>Choose Transportation: </Text>\n\n            <Picker selectedValue = {this.state.transport} \n              onValueChange = {this.updateTransport} \n              style = {styles.input}>\n                {/* <Picker.Item label = \"Bus\" value = \"Bus\" /> */}\n                {/* <Picker.Item label = \"Train\" value = \"Train\" />\n                <Picker.Item label = \"Car\" value = \"car\" />\n                <Picker.Item label = \"Aeroplane\" value = \"Aeroplane\" /> */}\n                {this.state.transportData.map((l, i) => {return <Picker.Item value={l} label={\"Cliente \" + i} key={i}  /> })}\n\n            </Picker>\n            <Text style = {styles.text}>{this.state.transport}</Text>\n\n            <Text style = {styles.text}>Add Hours: </Text>\n\n            <TextInput style = {styles.input}\n              underlineColorAndroid = \"transparent\"\n              placeholder = \" Hours (fe 1.3)\"\n              placeholderTextColor = {Colors.primaryColor}\n              autoCapitalize = \"none\"\n              onChangeText = {this.handleHours}/>\n\n            <TouchableOpacity\n              style = {styles.submitButton}\n              onPress = {\n                  () => this.login(this.state.transport, this.state.hours)\n              }>\n              <Text style = {styles.submitButtonText}> Submit </Text>\n            </TouchableOpacity>\n        </View>\n      )\n    }\n    else{\n\n    }\n  }\n}\n\nCategoriesScreen.navigationOptions = navData => {\n  return {\n    headerTitle: 'My Energy',\n    headerLeft: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName=\"ios-menu\"\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    )\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n      paddingTop: 23\n  },\n  input: {\n      margin: 20,\n      height: 40,\n      borderColor: Colors.primaryColor,\n      borderWidth: 1\n  },\n  submitButton: {\n      backgroundColor: Colors.primaryColor,\n      padding: 10,\n      margin: 15,\n      height: 40,\n  },\n  submitButtonText:{\n      color: 'white'\n  },\n  text: {\n    fontSize: 30,\n    alignSelf: 'left',\n    color: Colors.primaryColor,\n    padding: 10,\n    margin: 15\n }\n\n\n});\n\nexport default CategoriesScreen;\n"]},"metadata":{},"sourceType":"module"}