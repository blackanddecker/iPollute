{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/my-new-project/screens/SettignsScreen.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport HeaderButton from \"../components/HeaderButton\";\n\nvar SettingsScreen = function (_Component) {\n  _inherits(SettingsScreen, _Component);\n\n  var _super = _createSuper(SettingsScreen);\n\n  function SettingsScreen() {\n    var _this;\n\n    _classCallCheck(this, SettingsScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      username: '',\n      email: '',\n      isLoading: true,\n      isDisabled: true\n    };\n\n    _this.componentDidMount = function () {\n      fetch('http://0.0.0.0:5000/getCustomer', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this.setState({\n          isLoading: !_this.state.isLoading\n        });\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"User data didnt fetch\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SettingsScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.loading) {\n        return React.createElement(Button, {\n          style: styles.submitButton,\n          onPress: function onPress() {\n            return _this2.login(_this2.state.transport, _this2.state.hours);\n          },\n          title: \"Save\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  }]);\n\n  return SettingsScreen;\n}(Component);\n\n;\n\nSettingsScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'Settings',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  title: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 12,\n    margin: 20,\n    textAlign: 'center'\n  },\n  submitButton: {\n    backgroundColor: Colors.primaryColor,\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    color: 'white'\n  },\n  filterContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '80%',\n    marginVertical: 15\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/my-new-project/screens/SettignsScreen.js"],"names":["React","HeaderButtons","Item","HeaderButton","SettingsScreen","state","username","email","isLoading","isDisabled","componentDidMount","fetch","headers","method","then","response","json","responseJson","console","log","setState","catch","error","alert","loading","styles","submitButton","login","transport","hours","Component","navigationOptions","navData","headerTitle","headerLeft","navigation","toggleDrawer","StyleSheet","create","screen","flex","alignItems","title","fontFamily","fontSize","margin","textAlign","backgroundColor","Colors","primaryColor","padding","height","submitButtonText","color","filterContainer","flexDirection","justifyContent","width","marginVertical"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { View, Text, StyleSheet } from 'react-native';\n\nimport HeaderButton from '../components/HeaderButton';\n\nclass SettingsScreen extends Component {\n\n  state = {\n    username : '',\n    email: '',\n    isLoading: true,\n    isDisabled: true\n  }\n\n  componentDidMount = () => {\n    fetch('http://0.0.0.0:5000/getCustomer', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n       method: 'GET'\n    })\n    .then((response) => response.json())\n    .then((responseJson) => {\n        console.log(responseJson);\n        this.setState({isLoading: !this.state.isLoading })\n    })\n    .catch((error) => {\n       console.error(error);\n       alert(\"User data didnt fetch\");\n  \n      });\n    }\n    \n\n\n    render() {\n  \n      if(!this.state.loading) {\n        return (\n\n\n\n        <Button\n          style = {styles.submitButton}\n          onPress = {() => this.login(this.state.transport, this.state.hours)}\n          title= \"Save\" \n          >\n        </Button>\n        )\n      }\n      else{\n        return (\n          <ActivityIndicator size={\"large\"} ></ActivityIndicator>)\n      }\n    }\n\n  // return <MealList listData={favMeals} navigation={props.navigation} />;\n};\n\nSettingsScreen.navigationOptions = navData => {\n  return {\n    headerTitle: 'Settings',\n    headerLeft: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName=\"ios-menu\"\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    )\n  };\n};\n\nconst styles = StyleSheet.create({\n    screen: {\n      flex: 1,\n      alignItems: 'center'\n    },\n    title: {\n      fontFamily: 'open-sans-bold',\n      fontSize: 12,\n      margin: 20,\n      textAlign: 'center'\n    },\n    submitButton: {\n      backgroundColor: Colors.primaryColor,\n      padding: 10,\n      margin: 15,\n      height: 40,\n    },\n    submitButtonText:{\n        color: 'white'\n    },\n    filterContainer: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      width: '80%',\n      marginVertical: 15\n    }\n  });\n\nexport default SettingsScreen;\n"]},"metadata":{},"sourceType":"module"}