{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/my-new-project/screens/CategoriesScreen.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport HeaderButton from \"../components/HeaderButton\";\nimport { CATEGORIES } from \"../data/dummy-data\";\nimport CategoryGridTile from \"../components/CategoryGridTile\";\n\nvar CategoriesScreen = function (_Component) {\n  _inherits(CategoriesScreen, _Component);\n\n  var _super = _createSuper(CategoriesScreen);\n\n  function CategoriesScreen() {\n    var _this;\n\n    _classCallCheck(this, CategoriesScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: '',\n      password: ''\n    };\n\n    _this.handleEmail = function (text) {\n      _this.setState({\n        email: text\n      });\n    };\n\n    _this.handlePassword = function (text) {\n      _this.setState({\n        password: text\n      });\n    };\n\n    _this.login = function (email, pass) {\n      alert('email: ' + email + ' password: ' + pass);\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoriesScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 8\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Email\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        onChangeText: this.handleEmail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Password\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        onChangeText: this.handlePassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }), React.createElement(Picker, {\n        selectedValue: this.state.user,\n        onValueChange: this.updateUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 12\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Steve\",\n        value: \"steve\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 16\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Ellen\",\n        value: \"ellen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Maria\",\n        value: \"maria\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }\n      })), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, this.state.user), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return _this2.login(_this2.state.email, _this2.state.password);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.submitButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 14\n        }\n      }, \" Submit \")));\n    }\n  }]);\n\n  return CategoriesScreen;\n}(Component);\n\nCategoriesScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'My Energy',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    paddingTop: 23\n  },\n  input: {\n    margin: 15,\n    height: 40,\n    borderColor: '#7a42f4',\n    borderWidth: 1\n  },\n  submitButton: {\n    backgroundColor: '#7a42f4',\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    color: 'white'\n  }\n});\nexport default CategoriesScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/my-new-project/screens/CategoriesScreen.js"],"names":["React","Component","HeaderButtons","Item","HeaderButton","CATEGORIES","CategoryGridTile","CategoriesScreen","state","email","password","handleEmail","text","setState","handlePassword","login","pass","alert","styles","container","input","user","updateUser","submitButton","submitButtonText","navigationOptions","navData","headerTitle","headerLeft","navigation","toggleDrawer","StyleSheet","create","screen","flex","justifyContent","alignItems","paddingTop","margin","height","borderColor","borderWidth","backgroundColor","padding","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  View,\n  Text,\n  TextInput,\n  FlatList,\n  StyleSheet,\n  TouchableOpacity\n} from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\n\nimport HeaderButton from '../components/HeaderButton';\nimport { CATEGORIES } from '../data/dummy-data';\nimport CategoryGridTile from '../components/CategoryGridTile';\n\n\nclass CategoriesScreen extends Component {\n\n// const CategoriesScreen = props => {\n  // const renderGridItem = itemData => {\n  //   return (\n  //     <CategoryGridTile\n  //       title={itemData.item.title}\n  //       color={itemData.item.color}\n  //       onSelect={() => {\n  //         props.navigation.navigate({\n  //           routeName: 'CategoryMeals',\n  //           params: {\n  //             categoryId: itemData.item.id\n  //           }\n  //         });\n  //       }}\n  //     />\n  //   );\n  // };\n\n  // return (\n  //   <FlatList\n  //     keyExtractor={(item, index) => item.id}\n  //     data={CATEGORIES}\n  //     renderItem={renderGridItem}\n  //     numColumns={2}\n  //   />\n  // );\n  state = {\n    email: '',\n    password: ''\n }\n handleEmail = (text) => {\n    this.setState({ email: text })\n }\n handlePassword = (text) => {\n    this.setState({ password: text })\n }\n login = (email, pass) => {\n    alert('email: ' + email + ' password: ' + pass)\n }\n render() {\n    return (\n       <View style = {styles.container}>\n          <TextInput style = {styles.input}\n             underlineColorAndroid = \"transparent\"\n             placeholder = \"Email\"\n             placeholderTextColor = \"#9a73ef\"\n             autoCapitalize = \"none\"\n             onChangeText = {this.handleEmail}/>\n          \n          <TextInput style = {styles.input}\n             underlineColorAndroid = \"transparent\"\n             placeholder = \"Password\"\n             placeholderTextColor = \"#9a73ef\"\n             autoCapitalize = \"none\"\n             onChangeText = {this.handlePassword}/>\n          \n           <Picker selectedValue = {this.state.user} onValueChange = {this.updateUser}>\n               <Picker.Item label = \"Steve\" value = \"steve\" />\n               <Picker.Item label = \"Ellen\" value = \"ellen\" />\n               <Picker.Item label = \"Maria\" value = \"maria\" />\n            </Picker>\n            <Text style = {styles.text}>{this.state.user}</Text>\n\n\n          <TouchableOpacity\n             style = {styles.submitButton}\n             onPress = {\n                () => this.login(this.state.email, this.state.password)\n             }>\n             <Text style = {styles.submitButtonText}> Submit </Text>\n          </TouchableOpacity>\n       </View>\n    )\n  }\n}\n\nCategoriesScreen.navigationOptions = navData => {\n  return {\n    headerTitle: 'My Energy',\n    headerLeft: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName=\"ios-menu\"\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    )\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n      paddingTop: 23\n  },\n  input: {\n      margin: 15,\n      height: 40,\n      borderColor: '#7a42f4',\n      borderWidth: 1\n  },\n  submitButton: {\n      backgroundColor: '#7a42f4',\n      padding: 10,\n      margin: 15,\n      height: 40,\n  },\n  submitButtonText:{\n      color: 'white'\n  }\n\n\n});\n\nexport default CategoriesScreen;\n"]},"metadata":{},"sourceType":"module"}