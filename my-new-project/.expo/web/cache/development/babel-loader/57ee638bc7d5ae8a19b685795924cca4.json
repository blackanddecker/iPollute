{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/CategoriesScreen.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport Modal from 'react-native-modal';\nimport HeaderButton from \"../components/HeaderButton\";\nimport Colors from \"../constants/Colors\";\nimport { PieChart, ProgressChart } from 'react-native-chart-kit';\n\nvar CategoriesScreen = function (_Component) {\n  _inherits(CategoriesScreen, _Component);\n\n  var _super = _createSuper(CategoriesScreen);\n\n  function CategoriesScreen() {\n    var _this;\n\n    _classCallCheck(this, CategoriesScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: '',\n      password: '',\n      user: '',\n      energyType: '',\n      transport: '',\n      food: '',\n      hours: '',\n      transportData: [],\n      foodData: [],\n      isLoading: true,\n      isDisabled: true,\n      isTransportModalVisible: false,\n      isFoodModalVisible: false\n    };\n\n    _this.componentDidMount = function () {\n      fetch('http://0.0.0.0:5000/getTransportObjects', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        for (var key in responseJson['transportObjects']) {\n          _this.state.transportData.push(responseJson['transportObjects'][key]);\n        }\n\n        for (var _key2 in responseJson['foodObjects']) {\n          _this.state.foodData.push(responseJson['foodObjects'][_key2]);\n        }\n\n        _this.setState({\n          isLoading: !_this.state.isLoading\n        });\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"Transport data didnt fetch\");\n      });\n    };\n\n    _this.insertOrder = function (energyType, transport, hours) {\n      fetch('http://0.0.0.0:5000/insertOrder', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          item: transport,\n          time: hours\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"Insert Order Error\");\n      });\n    };\n\n    _this.updateTransport = function (transport) {\n      _this.setState({\n        transport: transport\n      });\n    };\n\n    _this.updateFood = function (food) {\n      _this.setState({\n        food: food\n      });\n    };\n\n    _this.handleEmail = function (text) {\n      _this.setState({\n        email: text\n      });\n    };\n\n    _this.handlePassword = function (text) {\n      _this.setState({\n        password: text\n      });\n    };\n\n    _this.handleHours = function (float) {\n      _this.setState({\n        hours: float\n      });\n    };\n\n    _this.handleTransport = function (text) {\n      _this.setState({\n        transport: text\n      });\n    };\n\n    _this.login = function (transport, hours) {\n      alert('Transport: ' + transport + ' Hours: ' + hours);\n    };\n\n    _this.openTransportModal = function () {\n      _this.setState({\n        isTransportModalVisible: true\n      });\n    };\n\n    _this.toggleTransportModal = function () {\n      _this.setState({\n        isTransportModalVisible: !_this.state.isTransportModalVisible\n      });\n    };\n\n    _this.closeTransportModal = function () {\n      _this.setState({\n        isTransportModalVisible: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoriesScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.transportData);\n      console.log(this.state.foodData);\n      var data = {\n        labels: ['Transport', 'Food', 'Total'],\n        data: [0.2, 0.45, 1]\n      };\n      var chartConfig = {\n        backgroundGradientFrom: '#1E2923',\n        backgroundGradientTo: '#08130D',\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(26, 255, 146, \" + opacity + \")\";\n        }\n      };\n\n      if (!this.state.loading) {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 9\n          }\n        }, React.createElement(ProgressChart, {\n          data: data,\n          width: 400,\n          height: 220,\n          chartConfig: chartConfig,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 9\n          }\n        }), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.openTransportModal();\n          },\n          underlayColor: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: styles.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }\n        }, \" Choose Food\"))), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.openTransportModal();\n          },\n          underlayColor: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: styles.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }\n        }, \" Choose Food\"))), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 9\n          }\n        }, React.createElement(Modal, {\n          animationIn: \"slideInUp\",\n          animationOut: \"slideOutDown\",\n          onBackdropPress: function onBackdropPress() {\n            return _this2.closeTransportModal();\n          },\n          onSwipeComplete: function onSwipeComplete() {\n            return _this2.closeTransportModal();\n          },\n          swipeDirection: \"right\",\n          isVisible: this.state.isTransportModalVisible,\n          width: 400,\n          height: 220,\n          style: {\n            backgroundColor: 'white'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }\n        }, React.createElement(Picker, {\n          selectedValue: this.state.transport,\n          onValueChange: this.updateTransport,\n          style: styles.input,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }\n        }, this.state.transportData.map(function (transports, id) {\n          return React.createElement(Picker.Item, {\n            value: transports.item,\n            label: transports.description,\n            key: transports.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 26\n            }\n          });\n        })), React.createElement(Text, {\n          style: styles.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }\n        }, \"Add Hours: \"), React.createElement(TextInput, {\n          style: styles.input,\n          underlineColorAndroid: \"transparent\",\n          placeholder: \" Hours (fe 1.3)\",\n          placeholderTextColor: Colors.primaryColor,\n          autoCapitalize: \"none\",\n          onChangeText: this.handleHours,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }\n        })), React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            position: 'absolute',\n            bottom: 0\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            backgroundColor: 'green',\n            width: '50%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'white',\n            textAlign: 'center',\n            padding: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }\n        }, \"Ok\")), React.createElement(TouchableOpacity, {\n          style: {\n            backgroundColor: 'red',\n            width: '50%'\n          },\n          onPress: function onPress() {\n            return _this2.closeModal();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'white',\n            textAlign: 'center',\n            padding: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }\n        }, \"Cancel\")))))), React.createElement(Text, {\n          style: styles.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }\n        }, \"Choose Food: \"), React.createElement(Picker, {\n          selectedValue: this.state.food,\n          onValueChange: this.updateFood,\n          style: styles.input,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }\n        }, this.state.foodData.map(function (foods, id) {\n          return React.createElement(Picker.Item, {\n            value: foods.item,\n            label: foods.description,\n            key: foods.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 26\n            }\n          });\n        })), React.createElement(Text, {\n          style: styles.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }\n        }, this.state.transport), React.createElement(Button, {\n          color: \"#008000\",\n          onPress: this.insertOrder,\n          title: \"Submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }\n        }));\n      } else {\n        return React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }]);\n\n  return CategoriesScreen;\n}(Component);\n\nCategoriesScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'My Energy',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'left'\n  },\n  container: {\n    paddingTop: 5,\n    flex: 1\n  },\n  input: {\n    margin: 5,\n    height: 30,\n    borderColor: Colors.primaryColor,\n    borderWidth: 1\n  },\n  pieChart: {\n    padding: 10,\n    marging: 10\n  },\n  submitButton: {\n    backgroundColor: Colors.primaryColor,\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    color: 'white'\n  },\n  modal: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#f7021a',\n    padding: 100\n  },\n  button: {\n    marginBottom: 30,\n    width: 260,\n    alignItems: 'center',\n    backgroundColor: Colors.primaryColor\n  },\n  buttonText: {\n    textAlign: 'center',\n    padding: 20,\n    color: 'white'\n  }\n});\nexport default CategoriesScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/CategoriesScreen.js"],"names":["React","Component","HeaderButtons","Item","Modal","HeaderButton","Colors","PieChart","ProgressChart","CategoriesScreen","state","email","password","user","energyType","transport","food","hours","transportData","foodData","isLoading","isDisabled","isTransportModalVisible","isFoodModalVisible","componentDidMount","fetch","headers","method","then","response","json","responseJson","console","log","key","push","setState","catch","error","alert","insertOrder","body","JSON","stringify","item","time","updateTransport","updateFood","handleEmail","text","handlePassword","handleHours","float","handleTransport","login","openTransportModal","toggleTransportModal","closeTransportModal","data","labels","chartConfig","backgroundGradientFrom","backgroundGradientTo","color","opacity","loading","styles","container","button","buttonText","backgroundColor","flex","justifyContent","input","map","transports","id","description","primaryColor","position","bottom","flexDirection","width","textAlign","padding","closeModal","foods","navigationOptions","navData","headerTitle","headerLeft","navigation","toggleDrawer","StyleSheet","create","screen","alignItems","paddingTop","margin","height","borderColor","borderWidth","pieChart","marging","submitButton","submitButtonText","modal","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  View,\n  Text,\n  TextInput,\n  ActivityIndicator,\n  StyleSheet,\n  Picker,\n  Button,\n  TouchableOpacity\n} from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport Modal from 'react-native-modal';\n\nimport HeaderButton from '../components/HeaderButton';\nimport Colors from '../constants/Colors';\nimport {\n  PieChart,\n  ProgressChart\n} from 'react-native-chart-kit'\n\nclass CategoriesScreen extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    user: '',\n    energyType:'',\n    transport: '',\n    food: '',\n    hours: '',\n    transportData: [],\n    foodData: [],\n    isLoading: true,\n    isDisabled: true,\n    isTransportModalVisible: false,\n    isFoodModalVisible: false\n\n }\n\n \n  componentDidMount = () => {\n    fetch('http://0.0.0.0:5000/getTransportObjects', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      method: 'GET'\n    })\n    .then((response) => response.json())\n    .then((responseJson) => {\n      console.log(responseJson);\n      for (const key in responseJson['transportObjects']){\n        // console.log(\"key:\",responseJson['transportObjects'][key])\n        this.state.transportData.push(responseJson['transportObjects'][key])\n        }\n      for (const key in responseJson['foodObjects']){\n        // console.log(\"key:\",responseJson['transportObjects'][key])\n        this.state.foodData.push(responseJson['foodObjects'][key])\n        }\n        this.setState({isLoading: !this.state.isLoading })\n    })\n    .catch((error) => {\n      console.error(error);\n      alert(\"Transport data didnt fetch\");\n\n    });\n  }\n\n\n\n  insertOrder = (energyType, transport, hours) => {\n    fetch('http://0.0.0.0:5000/insertOrder', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        // energyType: energyType,\n        item: transport,\n        time: hours\n     })\n    })\n    .then((response) => response.json())\n    .then((responseJson) => {\n      console.log(responseJson);\n    })\n    .catch((error) => {\n      console.error(error);\n      alert(\"Insert Order Error\");\n\n    });\n  }\n\n  updateTransport = (transport) => {\n    this.setState({ transport: transport })\n  }\n\n  updateFood = (food) => {\n    this.setState({ food: food })\n  }\n\n  handleEmail = (text) => {\n    this.setState({ email: text })\n  }\n  handlePassword = (text) => {\n    this.setState({ password: text })\n  }\n  handleHours = (float) => {\n    this.setState({ hours: float })\n  }\n  handleTransport = (text) => {\n  this.setState({ transport: text })\n  }\n  login = (transport, hours) => {\n    alert('Transport: ' + transport + ' Hours: ' + hours)\n  }\n\n\n\n\n  openTransportModal = () =>{\n    this.setState({\n      isTransportModalVisible:true\n    })\n    }\n\n  toggleTransportModal = () =>{\n    this.setState({\n      isTransportModalVisible:!this.state.isTransportModalVisible\n    })\n    }\n\n  closeTransportModal = () =>{\n    this.setState({\n      isTransportModalVisible:false\n    })\n    }\n\n\n\n\n\n\n\n\n  render() {\n\n    console.log(this.state.transportData);\n    console.log(this.state.foodData);\n\n    // const data = [0.4, 0.6, 0.8]\n\n    const data = {\n      labels: ['Transport', 'Food', 'Total'],\n      data: [ 0.2, 0.45, 1 ]\n    }\n    const chartConfig = {\n      backgroundGradientFrom: '#1E2923',\n      backgroundGradientTo: '#08130D',\n      color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`\n    }\n    \n\n    if(!this.state.loading) {\n      return (\n        <View style = {styles.container}>\n        <ProgressChart\n          data={data}\n          width={400}\n          height={220}\n          chartConfig={chartConfig}\n        />\n\n\n        <TouchableOpacity  onPress={()=>this.openTransportModal()}  underlayColor=\"white\">\n          <View style={styles.button}>\n            <Text style={styles.buttonText}> Choose Food</Text>\n          </View>\n        </TouchableOpacity>\n\n\n        <TouchableOpacity  onPress={()=>this.openTransportModal()}  underlayColor=\"white\">\n          <View style={styles.button}>\n            <Text style={styles.buttonText}> Choose Food</Text>\n          </View>\n        </TouchableOpacity>\n\n        <View>\n\n          <Modal animationIn=\"slideInUp\" \n              animationOut=\"slideOutDown\" \n              onBackdropPress={()=>this.closeTransportModal()}\n              onSwipeComplete={()=>this.closeTransportModal()} \n              swipeDirection=\"right\" \n              isVisible={this.state.isTransportModalVisible} \n              width={400}\n              height={220}\n              style={{backgroundColor:'white'}}>\n\n          <View style={{ flex: 1,justifyContent:'center'}}>\n            <Picker selectedValue = {this.state.transport} \n              onValueChange = {this.updateTransport} \n              style = {styles.input}>\n                {this.state.transportData.map((transports, id) => {\n                  return <Picker.Item \n                    value={transports.item} \n                    label={transports.description}\n                    key={transports.id}  /> \n                    \n                    }\n                    )}\n            </Picker>   \n\n            <Text style = {styles.text}>Add Hours: </Text>\n\n            <TextInput style = {styles.input}\n              underlineColorAndroid = \"transparent\"\n              placeholder = \" Hours (fe 1.3)\"\n              placeholderTextColor = {Colors.primaryColor}\n              autoCapitalize = \"none\"\n              onChangeText = {this.handleHours}/>     \n          </View>\n          \n          \n          <View style={{ flex: 1,justifyContent:'center',position:'absolute',bottom:0}}>\n              <View style={{flexDirection:'row',}}>\n                <TouchableOpacity style={{backgroundColor:'green',width:'50%'}}>\n                <Text style={{color:'white',textAlign:'center',padding:10}}>Ok</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={{backgroundColor:'red',width:'50%'}} onPress={()=>this.closeModal()}>\n                <Text style={{color:'white',textAlign:'center',padding:10}}>Cancel</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </Modal>\n\n        </View>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <Text style = {styles.text}>Choose Food: </Text>\n\n            <Picker selectedValue = {this.state.food} \n              onValueChange = {this.updateFood} \n              style = {styles.input}>\n                {this.state.foodData.map((foods, id) => {\n                  return <Picker.Item \n                    value={foods.item} \n                    label={foods.description}\n                    key={foods.id}  /> \n                    \n                    }\n                    )}\n            </Picker>\n\n            <Text style = {styles.text}>{this.state.transport}</Text>\n\n\n\n            <Button\n            \n               color=\"#008000\"\n                // padding= 10,\n                // margin= 15,\n                // height= 40\n              \n              onPress = {this.insertOrder}\n              title= \"Submit\" \n              // disabled={this.state.isDisabled}\n              >\n            </Button>\n        </View>\n\n      )\n    }\n    else{\n      return(<ActivityIndicator size={\"large\"} ></ActivityIndicator>)\n    }\n  }\n}\n\nCategoriesScreen.navigationOptions = navData => {\n  return {\n    headerTitle: 'My Energy',\n    headerLeft: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName=\"ios-menu\"\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    )\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'left'\n  },\n  container: {\n      paddingTop: 5,\n      flex:1\n  },\n  input: {\n      margin: 5,\n      height: 30,\n      borderColor: Colors.primaryColor,\n      borderWidth: 1\n  },\n  pieChart:{\n    padding: 10,\n    marging: 10\n  },\n  submitButton: {\n      backgroundColor: Colors.primaryColor,\n      padding: 10,\n      margin: 15,\n      height: 40,\n  },\n  submitButtonText:{\n      color: 'white'\n  },\n  modal: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#f7021a',\n    padding: 100\n },\n  button: {\n    marginBottom: 30,\n    width: 260,\n    alignItems: 'center',\n    backgroundColor:  Colors.primaryColor\n  },\n  buttonText: {\n    textAlign: 'center',\n    padding: 20,\n    color: 'white'\n  }\n\n\n});\n\nexport default CategoriesScreen;\n"]},"metadata":{},"sourceType":"module"}