{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/augmenta/Desktop/Project/my-new-project/screens/FiltersScreen.js\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { Slider } from 'react-native-elements';\nimport HeaderButton from \"../components/HeaderButton\";\nimport Colors from \"../constants/Colors\";\n\nvar FilterSwitch = function FilterSwitch(props) {\n  return React.createElement(View, {\n    style: styles.filterContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, props.label), React.createElement(Switch, {\n    trackColor: {\n      true: Colors.primaryColor\n    },\n    thumbColor: Platform.OS === 'android' ? Colors.primaryColor : '',\n    value: props.state,\n    onValueChange: props.onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar FiltersScreen = function FiltersScreen(props) {\n  var navigation = props.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isGlutenFree = _useState2[0],\n      setIsGlutenFree = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sliderCostValue = _useState4[0],\n      setsliderCostValue = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isVegan = _useState6[0],\n      setIsVegan = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isVegetarian = _useState8[0],\n      setIsVegetarian = _useState8[1];\n\n  var saveFilters = useCallback(function () {\n    var appliedFilters = {\n      glutenFree: isGlutenFree,\n      lactoseFree: isLactoseFree,\n      vegan: isVegan,\n      isVegetarian: isVegetarian\n    };\n    console.log(appliedFilters);\n  }, [isGlutenFree, isLactoseFree, isVegan, isVegetarian]);\n  useEffect(function () {\n    navigation.setParams({\n      save: saveFilters\n    });\n  }, [saveFilters]);\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Available Filters / Restrictions\"), React.createElement(FilterSwitch, {\n    label: \"Transport Type\",\n    state: isGlutenFree,\n    onChange: function onChange(newValue) {\n      return setIsGlutenFree(newValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(Slider, {\n    value: _this.state.value,\n    onValueChange: function onValueChange(value) {\n      return _this.setState({\n        sliderCostValue: sliderCostValue\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(FilterSwitch, {\n    label: \"Hours ( 0 - Max ) \",\n    state: isLactoseFree,\n    onChange: function onChange(newValue) {\n      return setIsLactoseFree(newValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(FilterSwitch, {\n    label: \"Cost ( 0 - Max )\",\n    state: isVegan,\n    onChange: function onChange(newValue) {\n      return setIsVegan(newValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(FilterSwitch, {\n    label: \"Dates \",\n    state: isVegetarian,\n    onChange: function onChange(newValue) {\n      return setIsVegetarian(newValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n};\n\nFiltersScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'Filters',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    })),\n    headerRight: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Save\",\n      iconName: \"ios-save\",\n      onPress: navData.navigation.getParam('save'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  title: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 22,\n    margin: 20,\n    textAlign: 'center'\n  },\n  filterContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '80%',\n    marginVertical: 15\n  }\n});\nexport default FiltersScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/my-new-project/screens/FiltersScreen.js"],"names":["React","useState","useEffect","useCallback","HeaderButtons","Item","Slider","HeaderButton","Colors","FilterSwitch","props","styles","filterContainer","label","true","primaryColor","Platform","OS","state","onChange","FiltersScreen","navigation","isGlutenFree","setIsGlutenFree","sliderCostValue","setsliderCostValue","isVegan","setIsVegan","isVegetarian","setIsVegetarian","saveFilters","appliedFilters","glutenFree","lactoseFree","isLactoseFree","vegan","console","log","setParams","save","screen","title","newValue","value","setState","setIsLactoseFree","navigationOptions","navData","headerTitle","headerLeft","toggleDrawer","headerRight","getParam","StyleSheet","create","flex","alignItems","fontFamily","fontSize","margin","textAlign","flexDirection","justifyContent","width","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { View, Text, StyleSheet, Switch, Platform } from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { Slider } from 'react-native-elements';\n\n\n\nimport HeaderButton from '../components/HeaderButton';\nimport Colors from '../constants/Colors';\n\nconst FilterSwitch = props => {\n  return (\n    <View style={styles.filterContainer}>\n      <Text>{props.label}</Text>\n      <Switch\n        trackColor={{ true: Colors.primaryColor }}\n        thumbColor={Platform.OS === 'android' ? Colors.primaryColor : ''}\n        value={props.state}\n        onValueChange={props.onChange}\n      />\n    </View>\n  );\n};\n\nconst FiltersScreen = props => {\n  const { navigation } = props;\n\n  const [isGlutenFree, setIsGlutenFree] = useState(false);\n  const [sliderCostValue, setsliderCostValue] = useState(0);\n  const [isVegan, setIsVegan] = useState(false);\n  const [isVegetarian, setIsVegetarian] = useState(false);\n\n  \n\n  const saveFilters = useCallback(() => {\n    const appliedFilters = {\n      glutenFree: isGlutenFree,\n      lactoseFree: isLactoseFree,\n      vegan: isVegan,\n      isVegetarian: isVegetarian\n    };\n\n    console.log(appliedFilters);\n  }, [isGlutenFree, isLactoseFree, isVegan, isVegetarian]);\n\n  useEffect(() => {\n    navigation.setParams({ save: saveFilters });\n  }, [saveFilters]);\n\n  return (\n    <View style={styles.screen}>\n      <Text style={styles.title}>Available Filters / Restrictions</Text>\n      <FilterSwitch\n        label=\"Transport Type\"\n        state={isGlutenFree}\n        onChange={newValue => setIsGlutenFree(newValue)}\n      />\n\n      <Slider\n          value={this.state.value}\n          onValueChange={(value) => this.setState({ sliderCostValue })}\n        />\n\n      <FilterSwitch\n        label=\"Hours ( 0 - Max ) \"\n        state={isLactoseFree}\n        onChange={newValue => setIsLactoseFree(newValue)}\n      />\n      <FilterSwitch\n        label=\"Cost ( 0 - Max )\"\n        state={isVegan}\n        onChange={newValue => setIsVegan(newValue)}\n      />\n      <FilterSwitch\n        label=\"Dates \"\n        state={isVegetarian}\n        onChange={newValue => setIsVegetarian(newValue)}\n      />\n    </View>\n  );\n};\n\nFiltersScreen.navigationOptions = navData => {\n  return {\n    headerTitle: 'Filters',\n    headerLeft: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName=\"ios-menu\"\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    ),\n    headerRight:(\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Save\"\n          iconName=\"ios-save\"\n          onPress={navData.navigation.getParam('save')}\n        />\n      </HeaderButtons>\n    )\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  title: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 22,\n    margin: 20,\n    textAlign: 'center'\n  },\n  filterContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '80%',\n    marginVertical: 15\n  }\n});\n\nexport default FiltersScreen;\n"]},"metadata":{},"sourceType":"module"}