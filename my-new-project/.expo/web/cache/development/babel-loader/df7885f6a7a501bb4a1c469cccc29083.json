{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"../components/Button\";\nimport FormTextInput from \"../components/FormTextInput\";\nimport imageLogo from \"../assets/favicon.png\";\nimport colors from \"../config/colors\";\nimport strings from \"../config/strings\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    _this.handleEmailChange = function (email) {\n      _this.setState({\n        email: email\n      });\n    };\n\n    _this.handlePasswordChange = function (password) {\n      _this.setState({\n        password: password\n      });\n    };\n\n    _this.handleLoginPress = function () {\n      console.log(\"Login button pressed\");\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        source: imageLogo,\n        style: styles.logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.form,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(FormTextInput, {\n        value: this.state.email,\n        onChangeText: this.handleEmailChange,\n        placeholder: strings.EMAIL_PLACEHOLDER,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }), React.createElement(FormTextInput, {\n        value: this.state.password,\n        onChangeText: this.handlePasswordChange,\n        placeholder: strings.PASSWORD_PLACEHOLDER,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        label: strings.LOGIN,\n        onPress: this.handleLoginPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.WHITE,\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  logo: {\n    flex: 1,\n    width: \"100%\",\n    resizeMode: \"contain\",\n    alignSelf: \"center\"\n  },\n  form: {\n    flex: 1,\n    justifyContent: \"center\",\n    width: \"80%\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/LoginScreen.js"],"names":["React","Button","FormTextInput","imageLogo","colors","strings","LoginScreen","state","email","password","handleEmailChange","setState","handlePasswordChange","handleLoginPress","console","log","styles","container","logo","form","EMAIL_PLACEHOLDER","PASSWORD_PLACEHOLDER","LOGIN","Component","StyleSheet","create","flex","backgroundColor","WHITE","alignItems","justifyContent","width","resizeMode","alignSelf"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,aAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;;IAIMC,W;;;;;;;;;;;;;;;UACJC,K,GAAO;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,QAAQ,EAAE;AAFL,K;;UAKPC,iB,GAAoB,UAACF,KAAD,EAAmB;AACrC,YAAKG,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,K;;UAEDI,oB,GAAuB,UAACH,QAAD,EAAsB;AAC3C,YAAKE,QAAL,CAAc;AAAEF,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACD,K;;UAEDI,gB,GAAmB,YAAM;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEd,SAAf;AAA0B,QAAA,KAAK,EAAEa,MAAM,CAACE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,KADpB;AAEE,QAAA,YAAY,EAAE,KAAKE,iBAFrB;AAGE,QAAA,WAAW,EAAEL,OAAO,CAACe,iBAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,aAAD;AACE,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,QADpB;AAEE,QAAA,YAAY,EAAE,KAAKG,oBAFrB;AAGE,QAAA,WAAW,EAAEP,OAAO,CAACgB,oBAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAWE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEhB,OAAO,CAACiB,KADjB;AAEE,QAAA,OAAO,EAAE,KAAKT,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CAFF,CADF;AAqBD;;;;EAxCuBU,S;;AA2C1B,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAEvB,MAAM,CAACwB,KAFf;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BZ,EAAAA,IAAI,EAAE;AACJQ,IAAAA,IAAI,EAAE,CADF;AAEJK,IAAAA,KAAK,EAAE,MAFH;AAGJC,IAAAA,UAAU,EAAE,SAHR;AAIJC,IAAAA,SAAS,EAAE;AAJP,GAPyB;AAa/Bd,EAAAA,IAAI,EAAE;AACJO,IAAAA,IAAI,EAAE,CADF;AAEJI,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,KAAK,EAAE;AAHH;AAbyB,CAAlB,CAAf;AAoBA,eAAezB,WAAf","sourcesContent":["import * as React from \"react\";\nimport { Image, StyleSheet, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport FormTextInput from \"../components/FormTextInput\";\nimport imageLogo from \"../assets/favicon.png\";\nimport colors from \"../config/colors\";\nimport strings from \"../config/strings\";\n\n\n\nclass LoginScreen extends Component {\n  state= {\n    email: \"\",\n    password: \"\"\n  }\n\n  handleEmailChange = (email: string) => {\n    this.setState({ email: email });\n  };\n\n  handlePasswordChange = (password: string) => {\n    this.setState({ password: password });\n  };\n\n  handleLoginPress = () => {\n    console.log(\"Login button pressed\");\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Image source={imageLogo} style={styles.logo} />\n        <View style={styles.form}>\n          <FormTextInput\n            value={this.state.email}\n            onChangeText={this.handleEmailChange}\n            placeholder={strings.EMAIL_PLACEHOLDER}\n          />\n          <FormTextInput\n            value={this.state.password}\n            onChangeText={this.handlePasswordChange}\n            placeholder={strings.PASSWORD_PLACEHOLDER}\n          />\n          <Button\n            label={strings.LOGIN}\n            onPress={this.handleLoginPress}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.WHITE,\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  logo: {\n    flex: 1,\n    width: \"100%\",\n    resizeMode: \"contain\",\n    alignSelf: \"center\"\n  },\n  form: {\n    flex: 1,\n    justifyContent: \"center\",\n    width: \"80%\"\n  }\n});\n\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}