{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/FiltersScreen.js\",\n    _this2 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect, useCallback, Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { Slider } from 'react-native-elements';\nimport DatePicker from 'react-native-datepicker';\nimport HeaderButton from \"../components/HeaderButton\";\nimport Colors from \"../constants/Colors\";\n\nvar FiltersScreen = function (_Component) {\n  _inherits(FiltersScreen, _Component);\n\n  var _super = _createSuper(FiltersScreen);\n\n  function FiltersScreen() {\n    var _this;\n\n    _classCallCheck(this, FiltersScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isLoading: true,\n      minDate: '',\n      maxDate: '',\n      maxKm: 0,\n      minKm: 0,\n      minKg: 0,\n      maxKg: 0,\n      minKg: 0,\n      transports: [],\n      foods: []\n    };\n\n    _this.componentDidMount = function () {\n      fetch('http://192.168.1.4:5000/getUserDetails', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: 1\n        }),\n        method: 'POST'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this.setState({\n          userId: responseJson['userDetails']['id'],\n          email: responseJson['userDetails']['email'],\n          username: responseJson['userDetails']['username'],\n          userEnergy: responseJson['userDetails']['energyTotal'],\n          password: responseJson['userDetails']['password'],\n          isLoading: !_this.state.isLoading\n        });\n\n        console.log(_this.state);\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"User data didnt fetch\");\n      });\n    };\n\n    _this.updateMinDate = function (minDate) {\n      _this.setState({\n        minDate: minDate\n      });\n    };\n\n    _this.updateMaxtDate = function (maxDate) {\n      _this.setState({\n        maxDate: maxDate\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FiltersScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.screen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, React.createElement(DatePicker, {\n        style: {\n          width: 200\n        },\n        date: this.minDate,\n        mode: \"date\",\n        placeholder: \"select date\",\n        format: \"YYYY-MM-DD\",\n        minDate: this.state.minDate,\n        maxDate: this.state.maxDate,\n        confirmBtnText: \"Confirm\",\n        cancelBtnText: \"Cancel\",\n        onDateChange: this.updateMinDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, React.createElement(DatePicker, {\n        style: {\n          width: 200\n        },\n        date: this.minDate,\n        mode: \"date\",\n        placeholder: \"select date\",\n        format: \"YYYY-MM-DD\",\n        minDate: this.state.minDate,\n        maxDate: this.state.maxDate,\n        confirmBtnText: \"Confirm\",\n        cancelBtnText: \"Cancel\",\n        onDateChange: this.updateMiupdateMaxtDatenDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, \"Cost Value: \", sliderCostValue), React.createElement(View, {\n        style: styles.slider,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, React.createElement(Slider, {\n        value: sliderCostValue,\n        onValueChange: function onValueChange(newValue) {\n          return setSliderCostValue(newValue);\n        },\n        maximumValue: 50,\n        minimumValue: 0,\n        step: 5,\n        trackStyle: {\n          height: 10,\n          backgroundColor: 'transparent'\n        },\n        thumbStyle: {\n          height: 20,\n          width: 20,\n          backgroundColor: Colors.primaryColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: styles.component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, \"Hours Value: \", sliderHoursValue), React.createElement(View, {\n        style: styles.slider,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }, React.createElement(Slider, {\n        value: sliderHoursValue,\n        onValueChange: function onValueChange(newValue) {\n          return setSliderHoursValue(newValue);\n        },\n        maximumValue: 50,\n        minimumValue: 0,\n        step: 5,\n        trackStyle: {\n          height: 10,\n          backgroundColor: 'transparent'\n        },\n        thumbStyle: {\n          height: 20,\n          width: 20,\n          backgroundColor: Colors.primaryColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }))));\n    }\n  }]);\n\n  return FiltersScreen;\n}(Component);\n\n;\n\nFiltersScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'Filters',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    })),\n    headerRight: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, React.createElement(Item, {\n      title: \"Save\",\n      iconName: \"ios-save\",\n      onPress: navData.navigation.getParam('save'),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center',\n    marginBottom: 15,\n    position: 'relative',\n    justifyContent: 'center',\n    padding: 5,\n    backgroundColor: '#ffffff'\n  },\n  filterContainer: {\n    flexDirection: 'row',\n    alignItems: 'stretch',\n    marginVertical: 15\n  },\n  sameRow: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  text: {\n    height: 30\n  },\n  component: {\n    borderRadius: 8,\n    paddingLeft: 25,\n    alignSelf: 'stretch'\n  },\n  slider: {\n    width: \"75%\"\n  }\n});\nexport default FiltersScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/FiltersScreen.js"],"names":["React","useState","useEffect","useCallback","Component","HeaderButtons","Item","Slider","DatePicker","HeaderButton","Colors","FiltersScreen","state","isLoading","minDate","maxDate","maxKm","minKm","minKg","maxKg","transports","foods","componentDidMount","fetch","headers","body","JSON","stringify","userId","method","then","response","json","responseJson","console","log","setState","email","username","userEnergy","password","catch","error","alert","updateMinDate","updateMaxtDate","styles","screen","component","width","updateMiupdateMaxtDatenDate","text","sliderCostValue","slider","newValue","setSliderCostValue","height","backgroundColor","primaryColor","sliderHoursValue","setSliderHoursValue","navigationOptions","navData","headerTitle","headerLeft","navigation","toggleDrawer","headerRight","getParam","StyleSheet","create","flex","alignItems","marginBottom","position","justifyContent","padding","filterContainer","flexDirection","marginVertical","sameRow","borderRadius","paddingLeft","alignSelf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, Component } from 'react';\nimport { View, Text, StyleSheet, Switch, Platform} from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { Slider } from 'react-native-elements';\nimport DatePicker from 'react-native-datepicker'\n\nimport HeaderButton from '../components/HeaderButton';\nimport Colors from '../constants/Colors';\n\n\n\n\n\nclass FiltersScreen extends Component {\n\n    state = {\n        isLoading: true,\n        minDate : '',\n        maxDate: '',\n        maxKm: 0,\n        minKm: 0,\n        minKg: 0, \n        maxKg: 0, \n        minKg: 0,\n        transports: [],\n        foods: []\n    }\n\n    componentDidMount = () => {\n            fetch('http://192.168.1.4:5000/getUserDetails', {\n                    headers: {\n                            'Accept': 'application/json',\n                            'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                            userId:1\n                    }),\n                    method: 'POST'\n            })\n            .then((response) => response.json())\n            .then((responseJson) => {\n                            console.log(responseJson);\n                            this.setState({\n                                    userId: responseJson['userDetails']['id'],\n                                    email: responseJson['userDetails']['email'],\n                                    username: responseJson['userDetails']['username'],\n                                    userEnergy: responseJson['userDetails']['energyTotal'],\n                                    password: responseJson['userDetails']['password'],\n                                    isLoading: !this.state.isLoading })\n                            console.log(this.state);\n                            \n            })\n            .catch((error) => {\n                     console.error(error);\n                     alert(\"User data didnt fetch\");\n                    });\n            }\n    // const { navigation } = props;\n\n    // const [isGlutenFree, setIsGlutenFree] = useState(false);\n    // const [isLactoseFree, setIsLactoseFree] = useState(false);\n    // const [isVegan, setIsVegan] = useState(false);\n    // const [isVegetarian, setIsVegetarian] = useState(false);\n    // const [sliderCostValue, setSliderCostValue] = useState(0);\n    // const [sliderHoursValue, setSliderHoursValue] = useState(0);\n\n    \n    // const [startDate, setStartDate] = useState(0);\n    // const [endDate, setEndDate] = useState(0);\n\n    // const saveFilters = useCallback(() => {\n    //     const appliedFilters = {\n    //         glutenFree: isGlutenFree,\n    //         lactoseFree: isLactoseFree,\n    //         vegan: isVegan,\n    //         isVegetarian: isVegetarian\n    //     };\n\n    //     console.log(appliedFilters);\n    // }, [isGlutenFree, isLactoseFree, isVegan, isVegetarian]);\n\n    // useEffect(() => {\n    //     navigation.setParams({ save: saveFilters });\n    // }, [saveFilters]);\n\n\n\n    updateMinDate = (minDate) => {\n        this.setState({ minDate: minDate })\n    }\n\n    updateMaxtDate = (maxDate) => {\n        this.setState({ maxDate: maxDate })\n    }\n    render() {\n        return (\n            <View style={styles.screen}>\n                <View style={styles.component}>\n                    <DatePicker\n                        style={{width: 200}}\n                        date={this.minDate}\n                        mode=\"date\"\n                        placeholder=\"select date\"\n                        format=\"YYYY-MM-DD\"\n                        minDate={this.state.minDate}\n                        maxDate={this.state.maxDate}\n                        confirmBtnText=\"Confirm\"\n                        cancelBtnText=\"Cancel\"\n                        onDateChange={this.updateMinDate}\n                    />\n                </View>\n            <View style={styles.component}>\n\n                <DatePicker\n                    style={{width: 200}}\n                    date={this.minDate}//{this.state.date}\n                    mode=\"date\"\n                    placeholder=\"select date\"\n                    format=\"YYYY-MM-DD\"\n                    minDate={this.state.minDate}\n                    maxDate={this.state.maxDate}\n                    confirmBtnText=\"Confirm\"\n                    cancelBtnText=\"Cancel\"\n                    onDateChange={this.updateMiupdateMaxtDatenDate}\n                    />    \n                </View>\n                <View style={styles.component}>\n                    <Text style={styles.text}>Cost Value: {sliderCostValue}</Text>\n                    <View style={styles.slider}>\n\n                        <Slider\n                                value={sliderCostValue}\n                                onValueChange={ newValue => setSliderCostValue(newValue)}\n                                maximumValue={50}\n                                minimumValue={0}\n                                step={5}\n                                trackStyle={{ height: 10, backgroundColor: 'transparent' }}\n                                thumbStyle={{ height: 20, width: 20, backgroundColor: Colors.primaryColor }}\n                        />\n\n                    </View>\n                </View>\n            <View style={styles.component}>\n                <Text style={styles.text}>Hours Value: {sliderHoursValue}</Text>\n                <View style={styles.slider}>\n\n                    <Slider\n                            value={sliderHoursValue}\n                            onValueChange={ newValue => setSliderHoursValue(newValue)}\n                            maximumValue={50}\n                            minimumValue={0}\n                            step={5}\n                            trackStyle={{ height: 10, backgroundColor: 'transparent' }}\n                            thumbStyle={{ height: 20, width: 20, backgroundColor: Colors.primaryColor }}\n                    />\n                </View>\n                </View>\n            </View>\n        )\n\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFiltersScreen.navigationOptions = navData => {\n    return {\n        headerTitle: 'Filters',\n        headerLeft: (\n            <HeaderButtons HeaderButtonComponent={HeaderButton}>\n                <Item\n                    title=\"Menu\"\n                    iconName=\"ios-menu\"\n                    onPress={() => {\n                        navData.navigation.toggleDrawer();\n                    }}\n                />\n            </HeaderButtons>\n        ),\n        headerRight:(\n            <HeaderButtons HeaderButtonComponent={HeaderButton}>\n                <Item\n                    title=\"Save\"\n                    iconName=\"ios-save\"\n                    onPress={navData.navigation.getParam('save')}\n                />\n            </HeaderButtons>\n        )\n    };\n};\n\nconst styles = StyleSheet.create({\n    screen: {\n\n        flex: 1,\n        alignItems: 'center',\n        marginBottom: 15,\n        position: 'relative',\n        justifyContent: 'center',\n        padding: 5,\n        backgroundColor: '#ffffff',\n    },\n\n    filterContainer: {\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        marginVertical: 15\n    },\n    sameRow:{\n        flex:1,\n        flexDirection:'row'\n    },\n    text: {\n        height: 30\n    },\n    component: {\n        borderRadius: 8,\n        paddingLeft: 25,\n        alignSelf: 'stretch',\n        // justifyContent: 'center'\n    },\n    slider:{\n        width:\"75%\"\n    }\n});\n\nexport default FiltersScreen;\n"]},"metadata":{},"sourceType":"module"}