{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/SettignsScreen.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport HeaderButton from \"../components/HeaderButton\";\nimport Colors from \"../constants/Colors\";\n\nvar SettingsScreen = function (_Component) {\n  _inherits(SettingsScreen, _Component);\n\n  var _super = _createSuper(SettingsScreen);\n\n  function SettingsScreen() {\n    var _this;\n\n    _classCallCheck(this, SettingsScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      username: '',\n      email: '',\n      bugdet: 0,\n      isLoading: true\n    };\n\n    _this.componentDidMount = function () {\n      fetch('http://192.168.1.4:5000/getCustomer', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this.setState({\n          username: responseJson['username'],\n          bugdet: responseJson['bugdet'],\n          email: responseJson['email'],\n          isLoading: !_this.state.isLoading\n        });\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"User data didnt fetch\");\n      });\n    };\n\n    _this.updateSettings = function (username, email, bugdet) {\n      alert('username: ' + username + ' email: ' + email + ' bugdet: ' + bugdet);\n    };\n\n    return _this;\n  }\n\n  _createClass(SettingsScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      return React.createElement(View, {\n        style: styles.screen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, \"Update Username \"), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: this.state.username,\n        autoCapitalize: \"none\",\n        onChangeText: this.handleHours,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 12\n        }\n      }, \"Update Email \"), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: this.state.email,\n        autoCapitalize: \"none\",\n        onChangeText: this.handleHours,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 12\n        }\n      }, \"Update Bugdet \"), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        keyboardType: \"numeric\",\n        placeholder: this.state.bugdet.toString(),\n        autoCapitalize: \"none\",\n        onChangeText: this.handlebugdet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, \" \"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.updateSettings(_this2.state.username, _this2.state.email, _this2.state.bugdet);\n        },\n        underlayColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, \" Save\"))));\n    }\n  }]);\n\n  return SettingsScreen;\n}(Component);\n\n;\n\nSettingsScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'Settings',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 15,\n    position: 'relative',\n    backgroundColor: '#ffffff'\n  },\n  title: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 12,\n    margin: 20,\n    textAlign: 'center'\n  },\n  input: {\n    width: \"75%\",\n    zIndex: 2,\n    borderBottomWidth: 1\n  },\n  button: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: 35,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    backgroundColor: '#2AC062',\n    shadowColor: '#2AC062',\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      height: 10,\n      width: 0\n    },\n    shadowRadius: 25,\n    backgroundColor: Colors.primaryColor\n  },\n  buttonText: {\n    textAlign: 'center',\n    padding: 20,\n    color: 'white'\n  },\n  text: {\n    height: 36,\n    borderRadius: 8,\n    marginLeft: 20,\n    marginTop: 20,\n    alignSelf: 'stretch'\n  },\n  container: {\n    paddingTop: 15\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/SettignsScreen.js"],"names":["React","Component","HeaderButtons","Item","HeaderButton","Colors","SettingsScreen","state","username","email","bugdet","isLoading","componentDidMount","fetch","headers","method","then","response","json","responseJson","console","log","setState","catch","error","alert","updateSettings","styles","screen","text","input","handleHours","toString","handlebugdet","button","buttonText","navigationOptions","navData","headerTitle","headerLeft","navigation","toggleDrawer","StyleSheet","create","flex","alignItems","justifyContent","marginBottom","position","backgroundColor","title","fontFamily","fontSize","margin","textAlign","width","zIndex","borderBottomWidth","display","flexDirection","height","borderRadius","shadowColor","shadowOpacity","shadowOffset","shadowRadius","primaryColor","padding","color","marginLeft","marginTop","alignSelf","container","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity } from 'react-native';\n\nimport HeaderButton from '../components/HeaderButton';\n\nimport Colors from '../constants/Colors';\n\nclass SettingsScreen extends Component {\n\n  state = {\n    username : '',\n    email: '',\n    bugdet: 0,\n    isLoading: true\n  }\n\n  componentDidMount = () => {\n    fetch('http://192.168.1.4:5000/getCustomer', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n       method: 'GET'\n    })\n    .then((response) => response.json())\n    .then((responseJson) => {\n        console.log(responseJson);\n        this.setState({username: responseJson['username'], bugdet: responseJson['bugdet'], email: responseJson['email'], isLoading: !this.state.isLoading })\n        \n    })\n    .catch((error) => {\n       console.error(error);\n       alert(\"User data didnt fetch\");\n      });\n    }\n    \n\n    updateSettings = (username, email, bugdet) => {\n      alert('username: ' + username + ' email: ' + email +' bugdet: ' + bugdet)\n    }\n    \n    render() {\n      console.log(this.state);\n\n      // if(!this.state.loading) {\n        return (\n        <View  style = {styles.screen}>\n\n          <Text style = {styles.text}>Update Username </Text>\n          <TextInput style = {styles.input}\n            underlineColorAndroid = \"transparent\"\n            placeholder = {this.state.username}\n            // placeholderTextColor = {Colors.primaryColor}\n            autoCapitalize = \"none\"\n            onChangeText = {this.handleHours}/> \n          \n           <Text style = {styles.text}>Update Email </Text>\n\n          <TextInput style = {styles.input}\n            underlineColorAndroid = \"transparent\"\n            placeholder = {this.state.email}\n            // placeholderTextColor = {Colors.primaryColor}\n            autoCapitalize = \"none\"\n            onChangeText = {this.handleHours}/>\n          \n           <Text style = {styles.text}>Update Bugdet </Text>\n\n          <TextInput style = {styles.input}\n            underlineColorAndroid = \"transparent\"\n            keyboardType = 'numeric'\n            placeholder = {(this.state.bugdet).toString()}\n\n            // placeholderTextColor = {Colors.primaryColor}\n            autoCapitalize = \"none\"\n            onChangeText = {this.handlebugdet}/>\n\n          <Text > </Text>\n\n          <TouchableOpacity  onPress={()=>this.updateSettings(this.state.username, this.state.email, this.state.bugdet)}  underlayColor=\"white\">\n          <View style={styles.button}>\n            <Text style={styles.buttonText}> Save</Text>\n          </View>\n        </TouchableOpacity> \n\n        </View>\n        )\n      // }\n      // else{\n      //   return (\n      //     <ActivityIndicator size={\"large\"} ></ActivityIndicator>)\n      // }\n    }\n\n  // return <MealList listData={favMeals} navigation={props.navigation} />;\n};\n\nSettingsScreen.navigationOptions = navData => {\n  return {\n    headerTitle: 'Settings',\n    headerLeft: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName=\"ios-menu\"\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    )\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 15,\n    position: 'relative',\n    backgroundColor: '#ffffff'\n  },\n\n  title: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 12,\n    margin: 20,\n    textAlign: 'center'\n  },\n  input:{\n    width: \"75%\",\n    zIndex: 2,\n    borderBottomWidth:1\n\n  },\n\n  button: {\n\n    display: 'flex',\n    flexDirection: 'row',\n    height: 35,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    backgroundColor: '#2AC062',\n    shadowColor: '#2AC062',\n    shadowOpacity: 0.5,\n    shadowOffset: { \n      height: 10, \n      width: 0 \n    },\n    shadowRadius: 25,\n    backgroundColor:  Colors.primaryColor\n    },\n    buttonText: {\n      textAlign: 'center',\n      padding: 20,\n      color: 'white'\n    },\n  text:{\n      height: 36,\n      borderRadius: 8,\n      marginLeft: 20,\n      marginTop: 20,\n      alignSelf: 'stretch',\n      // justifyContent: 'center'\n  },\n  container: {\n    paddingTop: 15\n  }\n});\n\nexport default SettingsScreen;\n"]},"metadata":{},"sourceType":"module"}