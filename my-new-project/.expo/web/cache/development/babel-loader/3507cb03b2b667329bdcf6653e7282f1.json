{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/iPollute/my-new-project/components/MealList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport Colors from \"../constants/Colors\";\nimport MealItem from \"./MealItem\";\n\nvar MealList = function (_Component) {\n  _inherits(MealList, _Component);\n\n  var _super = _createSuper(MealList);\n\n  function MealList(props) {\n    var _this;\n\n    _classCallCheck(this, MealList);\n\n    _this = _super.call(this, props);\n\n    _this.setModalVisible = function (bool) {\n      _this.setState({\n        isModalVisible: bool\n      });\n    };\n\n    _this.setInputText = function (text) {\n      _this.setState({\n        inputText: text\n      });\n    };\n\n    _this.setEditedItem = function (id) {\n      _this.setState({\n        editedItem: id\n      });\n    };\n\n    _this.handleEditItem = function (editedItem) {\n      var newData = _this.state.data.map(function (item) {\n        if (item.id === editedItem) {\n          item.text = _this.state.inputText;\n          return item;\n        }\n\n        return item;\n      });\n\n      _this.setState({\n        data: newData\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this.setModalVisible(true);\n\n          _this.setInputText(item.text), _this.setEditedItem(item.id);\n        },\n        underlayColor: '#f1f1f1',\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.item,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.marginLeft,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, \" Date: \", item.energyDate, \" \"), React.createElement(Text, {\n        style: styles.text,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, \" Energy Cost: \", item.energyCost, \". Total Cost: \", item.cost, \" \"), React.createElement(View, {\n        style: styles.marginRight,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, React.createElement(MaterialIcons, {\n        name: \"change-history\",\n        size: 30,\n        color: Colors.primaryColor,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }), React.createElement(MaterialIcons, {\n        name: \"delete\",\n        size: 30,\n        color: Colors.primaryColor,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }))));\n    };\n\n    _this.state = {\n      data: _this.props['list'],\n      isModalVisible: false,\n      inputText: '',\n      editedItem: 0\n    };\n    return _this;\n  }\n\n  _createClass(MealList, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"State data\", this.state.data);\n      return React.createElement(View, {\n        style: styles.contentContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, React.createElement(FlatList, {\n        data: this.props['list'],\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.energyId.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }), React.createElement(FlatList, {\n        data: this.state.data2,\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return MealList;\n}(Component);\n\n;\nvar styles = StyleSheet.create({\n  list: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 15\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  contentContainer: {\n    backgroundColor: 'white'\n  },\n  item: {\n    flexDirection: 'row',\n    borderBottomColor: 'grey',\n    alignItems: 'center'\n  },\n  marginLeft: {\n    marginLeft: 5\n  },\n  marginRight: {\n    marginLeft: 5\n  },\n  menu: {\n    width: 20,\n    height: 2,\n    backgroundColor: '#111',\n    margin: 2,\n    borderRadius: 3\n  },\n  text: {\n    marginVertical: 30,\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginLeft: 10\n  },\n  textInput: {\n    width: '90%',\n    marginLeft: 10,\n    marginRight: 10,\n    marginBottom: 30,\n    borderColor: 'gray',\n    fontSize: 16\n  },\n  modalView: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  touchableHighlight: {\n    backgroundColor: 'white',\n    marginVertical: 10,\n    alignSelf: 'stretch',\n    alignItems: 'center'\n  }\n});\nexport default MealList;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/iPollute/my-new-project/components/MealList.js"],"names":["React","Component","AntDesign","MaterialIcons","MaterialCommunityIcons","FontAwesome","Colors","MealItem","MealList","props","setModalVisible","bool","setState","isModalVisible","setInputText","text","inputText","setEditedItem","id","editedItem","handleEditItem","newData","state","data","map","item","renderItem","styles","marginLeft","energyDate","energyCost","cost","marginRight","primaryColor","console","log","contentContainer","energyId","toString","data2","StyleSheet","create","list","flex","justifyContent","alignItems","padding","headerText","fontSize","fontWeight","color","backgroundColor","flexDirection","borderBottomColor","menu","width","height","margin","borderRadius","marginVertical","textInput","marginBottom","borderColor","modalView","touchableHighlight","alignSelf"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {StyleSheet, Text, View, FlatList,  TextInput, Modal,TouchableHighlight  } from 'react-native';\nimport { AntDesign } from '@expo/vector-icons'; \nimport { MaterialIcons } from '@expo/vector-icons'; \nimport { MaterialCommunityIcons } from '@expo/vector-icons'; \nimport { FontAwesome } from '@expo/vector-icons';\nimport Colors from '../constants/Colors';\n\nimport MealItem from './MealItem';\n\nclass MealList extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        data: this.props['list'],\n        isModalVisible: false,\n        inputText: '',\n        editedItem: 0, \n        };\n  }\n\n  setModalVisible = (bool) => {\n    this.setState({ isModalVisible: bool })\n  }\n\n  setInputText = (text) => {\n      this.setState({ inputText: text })\n  }\n\n  setEditedItem = (id) => {\n      this.setState({ editedItem: id })\n  }\n        \n  handleEditItem = (editedItem) => {\n      const newData = this.state.data.map( item => {\n          if (item.id === editedItem ) {\n              item.text = this.state.inputText\n              return item\n          }\n          return item\n      })\n      this.setState({ data: newData })\n  }\n\n renderItem = ({ item }) => {\n    return (\n        <TouchableHighlight onPress={() => {this.setModalVisible(true); this.setInputText(item.text), this.setEditedItem(item.id)}}\n            underlayColor={'#f1f1f1'}> \n            <View style={styles.item} >\n                <View style={styles.marginLeft}>\n                </View>\n                <Text style={styles.text}> Date: {item.energyDate} </Text>\n                <Text style={styles.text}> Energy Cost: {item.energyCost}. Total Cost: {item.cost} </Text>\n                <View style={styles.marginRight}>\n                    <MaterialIcons name=\"change-history\" size={30} color={Colors.primaryColor} />\n                    <MaterialIcons name=\"delete\" size={30} color={Colors.primaryColor} />\n\n                </View>\n            </View>\n        </TouchableHighlight>\n    );\n  };\n\n  render() {\n      console.log(\"State data\", this.state.data)\n\n    return (\n        <View style={styles.contentContainer}>\n            <View>\n            <FlatList \n                data={this.props['list']}\n                renderItem={this.renderItem}\n                keyExtractor={(item) => item.energyId.toString()}\n            />\n            <FlatList \n                data={this.state.data2}\n                renderItem={this.renderItem}\n                keyExtractor={(item) => item.id}\n            />\n            </View>\n            {/* <Modal visible={\n                this.state.isModalVisible} \n                onRequestClose={() => this.setModalVisible(false)}>\n                \n                <View style={styles.modalView}>\n                    <Text style={styles.text}>Change text:</Text>\n                    <TextInput\n                        style={styles.textInput}\n                        onChangeText={(text) => {this.setState({inputText: text}); console.log('state ', this.state.inputText)}}\n                        defaultValue={this.state.inputText}\n                        editable = {true}\n                        multiline = {false}\n                        maxLength = {200}\n                    /> \n                    <TouchableHighlight onPress={() => {this.handleEditItem(this.state.editedItem); this.setModalVisible(false)}} \n                        style={[styles.touchableHighlight, {backgroundColor: 'orange'}]} underlayColor={'#f1f1f1'}>\n                        <Text style={styles.text}>Save</Text>\n                    </TouchableHighlight>  \n            \n                </View>           \n            </Modal>  */}\n        \n        \n        </View>\n    )\n  }\n};\n      \nconst styles = StyleSheet.create({\n    list: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 15\n    },\n    headerText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    contentContainer: {\n        backgroundColor: 'white',\n    },\n    item: {\n        flexDirection: 'row',\n        borderBottomColor: 'grey',\n        alignItems: 'center',\n    },\n    marginLeft: {\n        marginLeft: 5,\n    },\n    marginRight: {\n        marginLeft: 5,\n    },\n    menu: {\n        width: 20,\n        height: 2,\n        backgroundColor: '#111',\n        margin: 2,\n        borderRadius: 3,\n    },\n    text: {\n        marginVertical: 30,\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginLeft: 10,\n    },\n\n    textInput: {\n        width: '90%',\n        marginLeft: 10,\n        marginRight: 10,\n        marginBottom: 30,\n        borderColor: 'gray', \n        fontSize: 16,\n    },\n    modalView: {\n        flex: 1, \n        backgroundColor: 'white',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    touchableHighlight: {\n        backgroundColor: 'white', \n        marginVertical: 10,\n        alignSelf: 'stretch',\n        alignItems: 'center',\n    } \n});\n      \nexport default MealList;"]},"metadata":{},"sourceType":"module"}