{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/SettignsScreen.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport HeaderButton from \"../components/HeaderButton\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Colors from \"../constants/Colors\";\nimport Modal from 'react-native-modal';\n\nvar SettingsScreen = function (_Component) {\n  _inherits(SettingsScreen, _Component);\n\n  var _super = _createSuper(SettingsScreen);\n\n  function SettingsScreen() {\n    var _this;\n\n    _classCallCheck(this, SettingsScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      userId: -1,\n      username: '',\n      email: '',\n      energyTotal: 0,\n      isLoading: true,\n      password: '',\n      isUsernameModalVisible: false,\n      isPasswordModalVisible: false,\n      isDeleteAccountModalVisible: false,\n      isEnergyModalVisible: false,\n      isEmailModalVisible: false\n    };\n\n    _this.componentDidMount = function () {\n      fetch('http://192.168.1.4:5000/getUserDetails', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: 1\n        }),\n        method: 'POST'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this.setState({\n          userId: responseJson['userDetails']['id'],\n          email: responseJson['userDetails']['email'],\n          username: responseJson['userDetails']['username'],\n          energyTotal: responseJson['userDetails']['energyTotal'],\n          password: responseJson['userDetails']['password'],\n          isLoading: !_this.state.isLoading\n        });\n\n        console.log(_this.state);\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"User data didnt fetch\");\n      });\n    };\n\n    _this.openUsernameModal = function () {\n      _this.setState({\n        isUsernameModalVisible: true\n      });\n    };\n\n    _this.toggleUsernameModal = function () {\n      _this.setState({\n        isUsernameModalVisible: !_this.state.isUsernameModalVisible\n      });\n    };\n\n    _this.closeUsernameModal = function () {\n      _this.setState({\n        isUsernameModalVisible: false\n      });\n    };\n\n    _this.openEmailModal = function () {\n      _this.setState({\n        isEmailModalVisible: true\n      });\n    };\n\n    _this.toggleEmailModal = function () {\n      _this.setState({\n        isEmailModalVisible: !_this.state.isEmailModalVisible\n      });\n    };\n\n    _this.closeEmailModal = function () {\n      _this.setState({\n        isEmailModalVisible: false\n      });\n    };\n\n    _this.openPasswordModal = function () {\n      _this.setState({\n        isPasswordModalVisible: true\n      });\n    };\n\n    _this.togglePasswordModal = function () {\n      _this.setState({\n        isPasswordModalVisible: !_this.state.isPasswordModalVisible\n      });\n    };\n\n    _this.closePasswordModal = function () {\n      _this.setState({\n        isPasswordModalVisible: false\n      });\n    };\n\n    _this.openDeleteAccountModal = function () {\n      _this.setState({\n        isDeleteAccountModalVisible: true\n      });\n    };\n\n    _this.toggleDeleteAccountModal = function () {\n      _this.setState({\n        isDeleteAccountModalVisible: !_this.state.isDeleteAccountModalVisible\n      });\n    };\n\n    _this.closeDeleteAccountModal = function () {\n      _this.setState({\n        isDeleteAccountModalVisible: false\n      });\n    };\n\n    _this.openModal = function () {\n      _this.setState({\n        isModalVisible: true\n      });\n    };\n\n    _this.toggleModal = function () {\n      _this.setState({\n        isModalVisible: !_this.state.isModalVisible\n      });\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        isModalVisible: false\n      });\n    };\n\n    _this.openEnergyModal = function () {\n      _this.setState({\n        isEnergyModalVisible: true\n      });\n    };\n\n    _this.toggleEnergyModal = function () {\n      _this.setState({\n        isEnergyModalVisible: !_this.state.isEnergyModalVisible\n      });\n    };\n\n    _this.closeEnergyModal = function () {\n      _this.setState({\n        isEnergyModalVisible: false\n      });\n    };\n\n    _this.updateSettings = function (userId, username, email, password, energyTotal) {\n      alert(userId + 'username: ' + username + ' email: ' + email + ' energyTotal: ' + energyTotal + 'password:' + password);\n      fetch('http://192.168.1.4:5000/updateUser', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: userId,\n          email: email,\n          username: username,\n          energyTotal: energyTotal,\n          password: password\n        }),\n        method: 'POST'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"Update Failed\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SettingsScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      return React.createElement(View, {\n        style: styles.screen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.inputLabels,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, \" \"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.openUsernameModal();\n        },\n        underlayColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-add-circle-outline\",\n        size: 24,\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, \" Update Username\"))), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, \" \"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.openPasswordModal();\n        },\n        underlayColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-add-circle-outline\",\n        size: 24,\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, \" Update Password\"))), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, \" \"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.openEmailModal();\n        },\n        underlayColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-add-circle-outline\",\n        size: 24,\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      }, \" Update Email\"))), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, \" \"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.openEnergyModal();\n        },\n        underlayColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-add-circle-outline\",\n        size: 24,\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, \" Update Total Energy\"))), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, \" \"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.openDeleteAccountModal();\n        },\n        underlayColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-add-circle-outline\",\n        size: 24,\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }\n      }, \" Delete Account\")))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 10\n        }\n      }, React.createElement(Modal, {\n        animationIn: \"slideInUp\",\n        animationOut: \"slideOutDown\",\n        onBackdropPress: function onBackdropPress() {\n          return _this2.closeUsernameModal();\n        },\n        onSwipeComplete: function onSwipeComplete() {\n          return _this2.closeUsernameModal();\n        },\n        swipeDirection: \"right\",\n        isVisible: this.state.isUsernameModalVisible,\n        style: {\n          backgroundColor: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          width: \"300\",\n          height: \"300\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }, \"Update Username \"), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: this.state.username,\n        autoCapitalize: \"none\",\n        onChangeText: this.username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          position: 'absolute',\n          bottom: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: 'red',\n          width: '50%'\n        },\n        onPress: function onPress() {\n          return _this2.closeUsernameModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 33\n        }\n      }, \"Cancel\")), React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: 'green',\n          width: '50%'\n        },\n        onPress: function onPress() {\n          return _this2.updateSettings(_this2.state.userId, _this2.state.username, _this2.state.email, _this2.state.password, _this2.state.energyTotal);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 33\n        }\n      }, \"Save\"))))))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, React.createElement(Modal, {\n        animationIn: \"slideInUp\",\n        animationOut: \"slideOutDown\",\n        onBackdropPress: function onBackdropPress() {\n          return _this2.closeEmailModal();\n        },\n        onSwipeComplete: function onSwipeComplete() {\n          return _this2.closeEmailModal();\n        },\n        swipeDirection: \"right\",\n        isVisible: this.state.isEmailModalVisible,\n        width: \"90%\",\n        \"max-height\": \"40%\",\n        style: {\n          backgroundColor: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }\n      }, \"Update Email \"), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: this.state.email,\n        autoCapitalize: \"none\",\n        onChangeText: this.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          position: 'absolute',\n          bottom: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: 'red',\n          width: '50%'\n        },\n        onPress: function onPress() {\n          return _this2.closeEmailModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 29\n        }\n      }, \"Cancel\")), React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: 'green',\n          width: '50%'\n        },\n        onPress: function onPress() {\n          return _this2.updateSettings(_this2.state.userId, _this2.state.username, _this2.state.email, _this2.state.password, _this2.state.energyTotal);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }\n      }, \"Save\")))))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 10\n        }\n      }, React.createElement(Modal, {\n        animationIn: \"slideInUp\",\n        animationOut: \"slideOutDown\",\n        onBackdropPress: function onBackdropPress() {\n          return _this2.closePasswordModal();\n        },\n        onSwipeComplete: function onSwipeComplete() {\n          return _this2.closePasswordModal();\n        },\n        swipeDirection: \"right\",\n        isVisible: this.state.isPasswordModalVisible,\n        width: \"90%\",\n        \"max-height\": \"40%\",\n        style: {\n          backgroundColor: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }\n      }, \"Update Password \"), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: this.state.username,\n        autoCapitalize: \"none\",\n        onChangeText: this.password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }\n      }, \"Update Password Again \"), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        onChangeText: this.password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          position: 'absolute',\n          bottom: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: 'red',\n          width: '50%'\n        },\n        onPress: function onPress() {\n          return _this2.closePasswordModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 29\n        }\n      }, \"Cancel\")), React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: 'green',\n          width: '50%'\n        },\n        onPress: function onPress() {\n          return _this2.updateSettings(_this2.state.userId, _this2.state.username, _this2.state.email, _this2.state.password, _this2.state.energyTotal);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 29\n        }\n      }, \"Save\")))))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 10\n        }\n      }, React.createElement(Modal, {\n        animationIn: \"slideInUp\",\n        animationOut: \"slideOutDown\",\n        onBackdropPress: function onBackdropPress() {\n          return _this2.closeEnergyModal();\n        },\n        onSwipeComplete: function onSwipeComplete() {\n          return _this2.closeEnergyModal();\n        },\n        swipeDirection: \"right\",\n        isVisible: this.state.isEnergyModalVisible,\n        width: \"90%\",\n        \"max-height\": \"40%\",\n        style: {\n          backgroundColor: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }\n      }, \"Update Energy \"), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: this.state.username,\n        autoCapitalize: \"none\",\n        onChangeText: this.energy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          position: 'absolute',\n          bottom: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: 'red',\n          width: '50%'\n        },\n        onPress: function onPress() {\n          return _this2.closeEnergyModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 29\n        }\n      }, \"Cancel\")), React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: 'green',\n          width: '50%'\n        },\n        onPress: function onPress() {\n          return _this2.updateSettings(_this2.state.userId, _this2.state.username, _this2.state.email, _this2.state.password, _this2.state.energyTotal);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 29\n        }\n      }, \"Save\")))))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 10\n        }\n      }, React.createElement(Modal, {\n        animationIn: \"slideInUp\",\n        animationOut: \"slideOutDown\",\n        onBackdropPress: function onBackdropPress() {\n          return _this2.closeDeleteAccountModal();\n        },\n        onSwipeComplete: function onSwipeComplete() {\n          return _this2.closeDeleteAccountModal();\n        },\n        swipeDirection: \"right\",\n        isVisible: this.state.isDeleteAccountModalVisible,\n        width: \"90%\",\n        \"max-height\": \"40%\",\n        style: {\n          backgroundColor: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 17\n        }\n      }, \"Are you sure you want to delete your account ??\"), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          position: 'absolute',\n          bottom: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: 'red',\n          width: '50%'\n        },\n        onPress: function onPress() {\n          return _this2.closeDeleteAccountModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 29\n        }\n      }, \"Cancel\")), React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: 'green',\n          width: '50%'\n        },\n        onPress: function onPress() {\n          return _this2.deleteUser(_this2.state.userId, _this2.state.username, _this2.state.email, _this2.state.password, _this2.state.energyTotal);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 29\n        }\n      }, \"Save\")))))));\n    }\n  }]);\n\n  return SettingsScreen;\n}(Component);\n\n;\n\nSettingsScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'Settings',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 13\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 17\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 15,\n    position: 'relative',\n    backgroundColor: '#ffffff'\n  },\n  inputLabels: {\n    justifyContent: 'flex-start',\n    padding: 10\n  },\n  title: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 12,\n    margin: 20,\n    textAlign: 'center'\n  },\n  input: {\n    width: \"75%\",\n    zIndex: 2,\n    borderWidth: 1\n  },\n  button: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: 35,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    backgroundColor: '#F8F8FF',\n    shadowColor: '#2AC062',\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      height: 10,\n      width: 0\n    },\n    shadowRadius: 25,\n    backgroundColor: Colors.primaryColor\n  },\n  buttonText: {\n    textAlign: 'center',\n    padding: 20,\n    color: 'black'\n  },\n  text: {\n    height: 36,\n    borderRadius: 8,\n    marginLeft: 20,\n    marginTop: 20,\n    alignSelf: 'stretch'\n  },\n  container: {\n    paddingTop: 15\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/SettignsScreen.js"],"names":["React","Component","HeaderButtons","Item","HeaderButton","Ionicons","Colors","Modal","SettingsScreen","state","userId","username","email","energyTotal","isLoading","password","isUsernameModalVisible","isPasswordModalVisible","isDeleteAccountModalVisible","isEnergyModalVisible","isEmailModalVisible","componentDidMount","fetch","headers","body","JSON","stringify","method","then","response","json","responseJson","console","log","setState","catch","error","alert","openUsernameModal","toggleUsernameModal","closeUsernameModal","openEmailModal","toggleEmailModal","closeEmailModal","openPasswordModal","togglePasswordModal","closePasswordModal","openDeleteAccountModal","toggleDeleteAccountModal","closeDeleteAccountModal","openModal","isModalVisible","toggleModal","closeModal","openEnergyModal","toggleEnergyModal","closeEnergyModal","updateSettings","styles","screen","inputLabels","button","buttonText","backgroundColor","width","height","text","input","flex","justifyContent","position","bottom","flexDirection","color","textAlign","padding","energy","deleteUser","navigationOptions","navData","headerTitle","headerLeft","navigation","toggleDrawer","StyleSheet","create","alignItems","marginBottom","title","fontFamily","fontSize","margin","zIndex","borderWidth","display","borderRadius","shadowColor","shadowOpacity","shadowOffset","shadowRadius","primaryColor","marginLeft","marginTop","alignSelf","container","paddingTop"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,iCAApC;;;;;;AAGA,OAAOC,YAAP;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEMC,c;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,CAAC,CADL;AAEJC,MAAAA,QAAQ,EAAG,EAFP;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,WAAW,EAAE,CAJT;AAKJC,MAAAA,SAAS,EAAE,IALP;AAMJC,MAAAA,QAAQ,EAAC,EANL;AAOJC,MAAAA,sBAAsB,EAAE,KAPpB;AAQJC,MAAAA,sBAAsB,EAAE,KARpB;AASJC,MAAAA,2BAA2B,EAAC,KATxB;AAUJC,MAAAA,oBAAoB,EAAC,KAVjB;AAWJC,MAAAA,mBAAmB,EAAC;AAXhB,K;;UAeRC,iB,GAAoB,YAAM;AACtBC,MAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC5CC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SADmC;AAK5CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBhB,UAAAA,MAAM,EAAC;AADU,SAAf,CALsC;AAQ5CiB,QAAAA,MAAM,EAAE;AARoC,OAA3C,CAAL,CAUCC,IAVD,CAUM,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OAVN,EAWCF,IAXD,CAWM,UAACG,YAAD,EAAkB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AACA,cAAKG,QAAL,CAAc;AACVxB,UAAAA,MAAM,EAAEqB,YAAY,CAAC,aAAD,CAAZ,CAA4B,IAA5B,CADE;AAEVnB,UAAAA,KAAK,EAAEmB,YAAY,CAAC,aAAD,CAAZ,CAA4B,OAA5B,CAFG;AAGVpB,UAAAA,QAAQ,EAAEoB,YAAY,CAAC,aAAD,CAAZ,CAA4B,UAA5B,CAHA;AAIVlB,UAAAA,WAAW,EAAEkB,YAAY,CAAC,aAAD,CAAZ,CAA4B,aAA5B,CAJH;AAKVhB,UAAAA,QAAQ,EAAEgB,YAAY,CAAC,aAAD,CAAZ,CAA4B,UAA5B,CALA;AAMVjB,UAAAA,SAAS,EAAE,CAAC,MAAKL,KAAL,CAAWK;AANb,SAAd;;AAOAkB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKxB,KAAjB;AAEP,OAtBD,EAuBC0B,KAvBD,CAuBO,UAACC,KAAD,EAAW;AACbJ,QAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACAC,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACA,OA1BL;AA2BC,K;;UAIDC,iB,GAAoB,YAAK;AAAC,YAAKJ,QAAL,CAAc;AAAClB,QAAAA,sBAAsB,EAAC;AAAxB,OAAd;AAA6C,K;;UACvEuB,mB,GAAsB,YAAK;AAAC,YAAKL,QAAL,CAAc;AAAClB,QAAAA,sBAAsB,EAAC,CAAC,MAAKP,KAAL,CAAWO;AAApC,OAAd;AAA2E,K;;UACvGwB,kB,GAAqB,YAAK;AAAC,YAAKN,QAAL,CAAc;AAAClB,QAAAA,sBAAsB,EAAC;AAAxB,OAAd;AAA8C,K;;UAEzEyB,c,GAAiB,YAAK;AAAC,YAAKP,QAAL,CAAc;AAACd,QAAAA,mBAAmB,EAAC;AAArB,OAAd;AAA0C,K;;UACjEsB,gB,GAAmB,YAAK;AAAC,YAAKR,QAAL,CAAc;AAACd,QAAAA,mBAAmB,EAAC,CAAC,MAAKX,KAAL,CAAWW;AAAjC,OAAd;AAAqE,K;;UAC9FuB,e,GAAkB,YAAK;AAAC,YAAKT,QAAL,CAAc;AAACd,QAAAA,mBAAmB,EAAC;AAArB,OAAd;AAA2C,K;;UAEnEwB,iB,GAAoB,YAAK;AAAC,YAAKV,QAAL,CAAc;AAACjB,QAAAA,sBAAsB,EAAC;AAAxB,OAAd;AAA6C,K;;UACvE4B,mB,GAAsB,YAAK;AAAC,YAAKX,QAAL,CAAc;AAACjB,QAAAA,sBAAsB,EAAC,CAAC,MAAKR,KAAL,CAAWQ;AAApC,OAAd;AAA2E,K;;UACvG6B,kB,GAAqB,YAAK;AAAC,YAAKZ,QAAL,CAAc;AAACjB,QAAAA,sBAAsB,EAAC;AAAxB,OAAd;AAA8C,K;;UAEzE8B,sB,GAAyB,YAAK;AAAC,YAAKb,QAAL,CAAc;AAAChB,QAAAA,2BAA2B,EAAC;AAA7B,OAAd;AAAkD,K;;UACjF8B,wB,GAA2B,YAAK;AAAC,YAAKd,QAAL,CAAc;AAAChB,QAAAA,2BAA2B,EAAC,CAAC,MAAKT,KAAL,CAAWS;AAAzC,OAAd;AAAqF,K;;UACtH+B,uB,GAA0B,YAAK;AAAC,YAAKf,QAAL,CAAc;AAAChB,QAAAA,2BAA2B,EAAC;AAA7B,OAAd;AAAmD,K;;UAEnFgC,S,GAAY,YAAK;AAAC,YAAKhB,QAAL,CAAc;AAACiB,QAAAA,cAAc,EAAC;AAAhB,OAAd;AAAqC,K;;UACvDC,W,GAAc,YAAK;AAAC,YAAKlB,QAAL,CAAc;AAACiB,QAAAA,cAAc,EAAC,CAAC,MAAK1C,KAAL,CAAW0C;AAA5B,OAAd;AAA2D,K;;UAC/EE,U,GAAa,YAAK;AAAC,YAAKnB,QAAL,CAAc;AAACiB,QAAAA,cAAc,EAAC;AAAhB,OAAd;AAAsC,K;;UAEzDG,e,GAAkB,YAAK;AAAC,YAAKpB,QAAL,CAAc;AAACf,QAAAA,oBAAoB,EAAC;AAAtB,OAAd;AAA2C,K;;UACnEoC,iB,GAAoB,YAAK;AAAC,YAAKrB,QAAL,CAAc;AAACf,QAAAA,oBAAoB,EAAC,CAAC,MAAKV,KAAL,CAAWU;AAAlC,OAAd;AAAuE,K;;UACjGqC,gB,GAAmB,YAAK;AAAC,YAAKtB,QAAL,CAAc;AAACf,QAAAA,oBAAoB,EAAC;AAAtB,OAAd;AAA4C,K;;UAGrEsC,c,GAAiB,UAAC/C,MAAD,EAASC,QAAT,EAAmBC,KAAnB,EAA0BG,QAA1B,EAAoCF,WAApC,EAAoD;AACjEwB,MAAAA,KAAK,CAAC3B,MAAM,GAAC,YAAP,GAAsBC,QAAtB,GAAiC,UAAjC,GAA8CC,KAA9C,GAAqD,gBAArD,GAAwEC,WAAxE,GAAqF,WAArF,GAAkGE,QAAnG,CAAL;AAEAO,MAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC5CC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SADmC;AAK5CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBhB,UAAAA,MAAM,EAAEA,MADS;AAEjBE,UAAAA,KAAK,EAAEA,KAFU;AAGjBD,UAAAA,QAAQ,EAAEA,QAHO;AAIjBE,UAAAA,WAAW,EAAEA,WAJI;AAKjBE,UAAAA,QAAQ,EAAEA;AALO,SAAf,CALsC;AAY5CY,QAAAA,MAAM,EAAE;AAZoC,OAAvC,CAAL,CAcCC,IAdD,CAcM,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OAdN,EAeCF,IAfD,CAeM,UAACG,YAAD,EAAkB;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACH,OAjBD,EAkBCI,KAlBD,CAkBO,UAACC,KAAD,EAAW;AACdJ,QAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACAC,QAAAA,KAAK,CAAC,eAAD,CAAL;AACC,OArBL;AAsBH,K;;;;;;;6BAEQ;AAAA;;AACLL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxB,KAAjB;AAGI,aACA,oBAAC,IAAD;AAAS,QAAA,KAAK,EAAIiD,MAAM,CAACC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,EAGA,oBAAC,gBAAD;AAAqB,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACtB,iBAAL,EAAJ;AAAA,SAA9B;AAA+D,QAAA,aAAa,EAAC,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEoB,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,wBAAf;AAAwC,QAAA,IAAI,EAAE,EAA9C;AAAkD,QAAA,KAAK,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,CADJ,CAHA,EAUA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVA,EAWA,oBAAC,gBAAD;AAAqB,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAAClB,iBAAL,EAAJ;AAAA,SAA9B;AAA+D,QAAA,aAAa,EAAC,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEc,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,wBAAf;AAAwC,QAAA,IAAI,EAAE,EAA9C;AAAkD,QAAA,KAAK,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,CADJ,CAXA,EAiBA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBA,EAkBA,oBAAC,gBAAD;AAAqB,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACrB,cAAL,EAAJ;AAAA,SAA9B;AAA4D,QAAA,aAAa,EAAC,OAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEiB,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,wBAAf;AAAwC,QAAA,IAAI,EAAE,EAA9C;AAAkD,QAAA,KAAK,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,CADJ,CAlBA,EAwBA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAxBA,EAyBA,oBAAC,gBAAD;AAAqB,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACR,eAAL,EAAJ;AAAA,SAA9B;AAA6D,QAAA,aAAa,EAAC,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,wBAAf;AAAwC,QAAA,IAAI,EAAE,EAA9C;AAAkD,QAAA,KAAK,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,CADJ,CAzBA,EA+BA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA/BA,EAgCA,oBAAC,gBAAD;AAAqB,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACf,sBAAL,EAAJ;AAAA,SAA9B;AAAoE,QAAA,aAAa,EAAC,OAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEW,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,wBAAf;AAAwC,QAAA,IAAI,EAAE,EAA9C;AAAkD,QAAA,KAAK,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CADJ,CAhCA,CAFA,EAgDP,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,WAAnB;AACI,QAAA,YAAY,EAAC,cADjB;AAEI,QAAA,eAAe,EAAE;AAAA,iBAAI,MAAI,CAACtB,kBAAL,EAAJ;AAAA,SAFrB;AAGI,QAAA,eAAe,EAAE;AAAA,iBAAI,MAAI,CAACA,kBAAL,EAAJ;AAAA,SAHrB;AAII,QAAA,cAAc,EAAC,OAJnB;AAKI,QAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWO,sBAL1B;AAMI,QAAA,KAAK,EAAE;AAAC+C,UAAAA,eAAe,EAAC;AAAjB,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAC,KADD;AAELC,UAAAA,MAAM,EAAC;AAFF,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIP,MAAM,CAACQ,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,EAII,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAIR,MAAM,CAACS,KAA3B;AACI,QAAA,qBAAqB,EAAG,aAD5B;AAEI,QAAA,WAAW,EAAI,KAAK1D,KAAL,CAAWE,QAF9B;AAGI,QAAA,cAAc,EAAG,MAHrB;AAII,QAAA,YAAY,EAAI,KAAKA,QAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAWI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEyD,UAAAA,IAAI,EAAE,CAAR;AAAUC,UAAAA,cAAc,EAAC,QAAzB;AAAkCC,UAAAA,QAAQ,EAAC,UAA3C;AAAsDC,UAAAA,MAAM,EAAC;AAA7D,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAC;AAAf,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAACT,UAAAA,eAAe,EAAC,KAAjB;AAAuBC,UAAAA,KAAK,EAAC;AAA7B,SAAzB;AAA8D,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACxB,kBAAL,EAAJ;AAAA,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACiC,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,SAAS,EAAC,QAAzB;AAAkCC,UAAAA,OAAO,EAAC;AAA1C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,EAII,oBAAC,gBAAD;AACA,QAAA,KAAK,EAAE;AAACZ,UAAAA,eAAe,EAAC,OAAjB;AAAyBC,UAAAA,KAAK,EAAC;AAA/B,SADP;AAEA,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACP,cAAL,CACT,MAAI,CAAChD,KAAL,CAAWC,MADF,EAET,MAAI,CAACD,KAAL,CAAWE,QAFF,EAGT,MAAI,CAACF,KAAL,CAAWG,KAHF,EAIT,MAAI,CAACH,KAAL,CAAWM,QAJF,EAKT,MAAI,CAACN,KAAL,CAAWI,WALF,CAAJ;AAAA,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC4D,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,SAAS,EAAC,QAAzB;AAAkCC,UAAAA,OAAO,EAAC;AAA1C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CAJJ,CADJ,CAXJ,CAPJ,CADH,CAhDO,EA+FN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,WAAnB;AACI,QAAA,YAAY,EAAC,cADjB;AAEI,QAAA,eAAe,EAAE;AAAA,iBAAI,MAAI,CAAChC,eAAL,EAAJ;AAAA,SAFrB;AAGI,QAAA,eAAe,EAAE;AAAA,iBAAI,MAAI,CAACA,eAAL,EAAJ;AAAA,SAHrB;AAII,QAAA,cAAc,EAAC,OAJnB;AAKI,QAAA,SAAS,EAAE,KAAKlC,KAAL,CAAWW,mBAL1B;AAMI,QAAA,KAAK,EAAC,KANV;AAOI,sBAAW,KAPf;AAQI,QAAA,KAAK,EAAE;AAAC2C,UAAAA,eAAe,EAAC;AAAjB,SARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIL,MAAM,CAACQ,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAVJ,EAWI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAIR,MAAM,CAACS,KAA3B;AACI,QAAA,qBAAqB,EAAG,aAD5B;AAEI,QAAA,WAAW,EAAI,KAAK1D,KAAL,CAAWG,KAF9B;AAII,QAAA,cAAc,EAAG,MAJrB;AAKI,QAAA,YAAY,EAAI,KAAKA,KALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAkBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEwD,UAAAA,IAAI,EAAE,CAAR;AAAUC,UAAAA,cAAc,EAAC,QAAzB;AAAkCC,UAAAA,QAAQ,EAAC,UAA3C;AAAsDC,UAAAA,MAAM,EAAC;AAA7D,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAC;AAAf,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAACT,UAAAA,eAAe,EAAC,KAAjB;AAAuBC,UAAAA,KAAK,EAAC;AAA7B,SAAzB;AAA8D,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACrB,eAAL,EAAJ;AAAA,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC8B,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,SAAS,EAAC,QAAzB;AAAkCC,UAAAA,OAAO,EAAC;AAA1C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,EAII,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE;AAACZ,UAAAA,eAAe,EAAC,OAAjB;AAAyBC,UAAAA,KAAK,EAAC;AAA/B,SADT;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACP,cAAL,CACX,MAAI,CAAChD,KAAL,CAAWC,MADA,EAEX,MAAI,CAACD,KAAL,CAAWE,QAFA,EAGX,MAAI,CAACF,KAAL,CAAWG,KAHA,EAIX,MAAI,CAACH,KAAL,CAAWM,QAJA,EAKX,MAAI,CAACN,KAAL,CAAWI,WALA,CAAJ;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC4D,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,SAAS,EAAC,QAAzB;AAAkCC,UAAAA,OAAO,EAAC;AAA1C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CAJJ,CADJ,CAlBJ,CADF,CA/FM,EA4IP,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,WAAnB;AACI,QAAA,YAAY,EAAC,cADjB;AAEI,QAAA,eAAe,EAAE;AAAA,iBAAI,MAAI,CAAC7B,kBAAL,EAAJ;AAAA,SAFrB;AAGI,QAAA,eAAe,EAAE;AAAA,iBAAI,MAAI,CAACA,kBAAL,EAAJ;AAAA,SAHrB;AAII,QAAA,cAAc,EAAC,OAJnB;AAKI,QAAA,SAAS,EAAE,KAAKrC,KAAL,CAAWQ,sBAL1B;AAMI,QAAA,KAAK,EAAC,KANV;AAOI,sBAAW,KAPf;AAQI,QAAA,KAAK,EAAE;AAAC8C,UAAAA,eAAe,EAAC;AAAjB,SARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIL,MAAM,CAACQ,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVJ,EAWI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAIR,MAAM,CAACS,KAA3B;AACI,QAAA,qBAAqB,EAAG,aAD5B;AAEI,QAAA,WAAW,EAAI,KAAK1D,KAAL,CAAWE,QAF9B;AAII,QAAA,cAAc,EAAG,MAJrB;AAKI,QAAA,YAAY,EAAI,KAAKI,QALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAiBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAI2C,MAAM,CAACQ,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAjBJ,EAkBI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAIR,MAAM,CAACS,KAA3B;AACI,QAAA,qBAAqB,EAAG,aAD5B;AAGI,QAAA,cAAc,EAAG,MAHrB;AAII,QAAA,YAAY,EAAI,KAAKpD,QAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,EAwBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEqD,UAAAA,IAAI,EAAE,CAAR;AAAUC,UAAAA,cAAc,EAAC,QAAzB;AAAkCC,UAAAA,QAAQ,EAAC,UAA3C;AAAsDC,UAAAA,MAAM,EAAC;AAA7D,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAC;AAAf,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAACT,UAAAA,eAAe,EAAC,KAAjB;AAAuBC,UAAAA,KAAK,EAAC;AAA7B,SAAzB;AAA8D,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAAClB,kBAAL,EAAJ;AAAA,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC2B,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,SAAS,EAAC,QAAzB;AAAkCC,UAAAA,OAAO,EAAC;AAA1C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,EAII,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE;AAACZ,UAAAA,eAAe,EAAC,OAAjB;AAAyBC,UAAAA,KAAK,EAAC;AAA/B,SADT;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACP,cAAL,CACX,MAAI,CAAChD,KAAL,CAAWC,MADA,EAEX,MAAI,CAACD,KAAL,CAAWE,QAFA,EAGX,MAAI,CAACF,KAAL,CAAWG,KAHA,EAIX,MAAI,CAACH,KAAL,CAAWM,QAJA,EAKX,MAAI,CAACN,KAAL,CAAWI,WALA,CAAJ;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC4D,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,SAAS,EAAC,QAAzB;AAAkCC,UAAAA,OAAO,EAAC;AAA1C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CAJJ,CADJ,CAxBJ,CADH,CA5IO,EA8LP,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,WAAnB;AACI,QAAA,YAAY,EAAC,cADjB;AAEI,QAAA,eAAe,EAAE;AAAA,iBAAI,MAAI,CAACnB,gBAAL,EAAJ;AAAA,SAFrB;AAGI,QAAA,eAAe,EAAE;AAAA,iBAAI,MAAI,CAACA,gBAAL,EAAJ;AAAA,SAHrB;AAII,QAAA,cAAc,EAAC,OAJnB;AAKI,QAAA,SAAS,EAAE,KAAK/C,KAAL,CAAWU,oBAL1B;AAMI,QAAA,KAAK,EAAC,KANV;AAOI,sBAAW,KAPf;AAQI,QAAA,KAAK,EAAE;AAAC4C,UAAAA,eAAe,EAAC;AAAjB,SARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIL,MAAM,CAACQ,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVJ,EAWI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAIR,MAAM,CAACS,KAA3B;AACI,QAAA,qBAAqB,EAAG,aAD5B;AAEI,QAAA,WAAW,EAAI,KAAK1D,KAAL,CAAWE,QAF9B;AAII,QAAA,cAAc,EAAG,MAJrB;AAKI,QAAA,YAAY,EAAI,KAAKiE,MALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAkBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAER,UAAAA,IAAI,EAAE,CAAR;AAAUC,UAAAA,cAAc,EAAC,QAAzB;AAAkCC,UAAAA,QAAQ,EAAC,UAA3C;AAAsDC,UAAAA,MAAM,EAAC;AAA7D,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAC;AAAf,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAACT,UAAAA,eAAe,EAAC,KAAjB;AAAuBC,UAAAA,KAAK,EAAC;AAA7B,SAAzB;AAA8D,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACR,gBAAL,EAAJ;AAAA,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACiB,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,SAAS,EAAC,QAAzB;AAAkCC,UAAAA,OAAO,EAAC;AAA1C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,EAII,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE;AAACZ,UAAAA,eAAe,EAAC,OAAjB;AAAyBC,UAAAA,KAAK,EAAC;AAA/B,SADT;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACP,cAAL,CACX,MAAI,CAAChD,KAAL,CAAWC,MADA,EAEX,MAAI,CAACD,KAAL,CAAWE,QAFA,EAGX,MAAI,CAACF,KAAL,CAAWG,KAHA,EAIX,MAAI,CAACH,KAAL,CAAWM,QAJA,EAKX,MAAI,CAACN,KAAL,CAAWI,WALA,CAAJ;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC4D,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,SAAS,EAAC,QAAzB;AAAkCC,UAAAA,OAAO,EAAC;AAA1C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CAJJ,CADJ,CAlBJ,CADH,CA9LO,EAiPP,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,WAAnB;AACI,QAAA,YAAY,EAAC,cADjB;AAEI,QAAA,eAAe,EAAE;AAAA,iBAAI,MAAI,CAAC1B,uBAAL,EAAJ;AAAA,SAFrB;AAGI,QAAA,eAAe,EAAE;AAAA,iBAAI,MAAI,CAACA,uBAAL,EAAJ;AAAA,SAHrB;AAII,QAAA,cAAc,EAAC,OAJnB;AAKI,QAAA,SAAS,EAAE,KAAKxC,KAAL,CAAWS,2BAL1B;AAMI,QAAA,KAAK,EAAC,KANV;AAOI,sBAAW,KAPf;AAQI,QAAA,KAAK,EAAE;AAAC6C,UAAAA,eAAe,EAAC;AAAjB,SARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIL,MAAM,CAACQ,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DATJ,EAUI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,IAAI,EAAE,CAAR;AAAUC,UAAAA,cAAc,EAAC,QAAzB;AAAkCC,UAAAA,QAAQ,EAAC,UAA3C;AAAsDC,UAAAA,MAAM,EAAC;AAA7D,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAC;AAAf,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAACT,UAAAA,eAAe,EAAC,KAAjB;AAAuBC,UAAAA,KAAK,EAAC;AAA7B,SAAzB;AAA8D,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACf,uBAAL,EAAJ;AAAA,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACwB,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,SAAS,EAAC,QAAzB;AAAkCC,UAAAA,OAAO,EAAC;AAA1C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,EAII,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE;AAACZ,UAAAA,eAAe,EAAC,OAAjB;AAAyBC,UAAAA,KAAK,EAAC;AAA/B,SADT;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACa,UAAL,CACX,MAAI,CAACpE,KAAL,CAAWC,MADA,EAEX,MAAI,CAACD,KAAL,CAAWE,QAFA,EAGX,MAAI,CAACF,KAAL,CAAWG,KAHA,EAIX,MAAI,CAACH,KAAL,CAAWM,QAJA,EAKX,MAAI,CAACN,KAAL,CAAWI,WALA,CAAJ;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC4D,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,SAAS,EAAC,QAAzB;AAAkCC,UAAAA,OAAO,EAAC;AAA1C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CAJJ,CADJ,CAVJ,CADH,CAjPO,CADA;AAgUP;;;;EAzaoB1E,S;;AA4a5B;;AAEDO,cAAc,CAACsE,iBAAf,GAAmC,UAAAC,OAAO,EAAI;AAC1C,SAAO;AACHC,IAAAA,WAAW,EAAE,UADV;AAEHC,IAAAA,UAAU,EACN,oBAAC,aAAD;AAAe,MAAA,qBAAqB,EAAE7E,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAC,MADV;AAEI,MAAA,QAAQ,EAAC,UAFb;AAGI,MAAA,OAAO,EAAE,mBAAM;AACX2E,QAAAA,OAAO,CAACG,UAAR,CAAmBC,YAAnB;AACH,OALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAHD,GAAP;AAcH,CAfD;;AAiBA,IAAMzB,MAAM,GAAG0B,UAAU,CAACC,MAAX,CAAkB;AAC7B1B,EAAAA,MAAM,EAAE;AACJS,IAAAA,IAAI,EAAE,CADF;AAEJkB,IAAAA,UAAU,EAAE,QAFR;AAGJjB,IAAAA,cAAc,EAAE,QAHZ;AAIJkB,IAAAA,YAAY,EAAE,EAJV;AAKJjB,IAAAA,QAAQ,EAAE,UALN;AAMJP,IAAAA,eAAe,EAAE;AANb,GADqB;AAS7BH,EAAAA,WAAW,EAAC;AACRS,IAAAA,cAAc,EAAE,YADR;AAERM,IAAAA,OAAO,EAAE;AAFD,GATiB;AAa7Ba,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE,gBADT;AAEHC,IAAAA,QAAQ,EAAE,EAFP;AAGHC,IAAAA,MAAM,EAAE,EAHL;AAIHjB,IAAAA,SAAS,EAAE;AAJR,GAbsB;AAmB7BP,EAAAA,KAAK,EAAC;AACFH,IAAAA,KAAK,EAAE,KADL;AAEF4B,IAAAA,MAAM,EAAE,CAFN;AAGFC,IAAAA,WAAW,EAAC;AAHV,GAnBuB;AAyB7BhC,EAAAA,MAAM,EAAE;AAEJiC,IAAAA,OAAO,EAAE,MAFL;AAGJtB,IAAAA,aAAa,EAAE,KAHX;AAIJP,IAAAA,MAAM,EAAE,EAJJ;AAKJ8B,IAAAA,YAAY,EAAE,CALV;AAMJ1B,IAAAA,cAAc,EAAE,QANZ;AAOJiB,IAAAA,UAAU,EAAE,QAPR;AAQJtB,IAAAA,KAAK,EAAE,MARH;AASJD,IAAAA,eAAe,EAAE,SATb;AAUJiC,IAAAA,WAAW,EAAE,SAVT;AAWJC,IAAAA,aAAa,EAAE,GAXX;AAYJC,IAAAA,YAAY,EAAE;AACVjC,MAAAA,MAAM,EAAE,EADE;AAEVD,MAAAA,KAAK,EAAE;AAFG,KAZV;AAgBJmC,IAAAA,YAAY,EAAE,EAhBV;AAiBJpC,IAAAA,eAAe,EAAKzD,MAAM,CAAC8F;AAjBvB,GAzBqB;AA4CzBtC,EAAAA,UAAU,EAAE;AACRY,IAAAA,SAAS,EAAE,QADH;AAERC,IAAAA,OAAO,EAAE,EAFD;AAGRF,IAAAA,KAAK,EAAE;AAHC,GA5Ca;AAiD7BP,EAAAA,IAAI,EAAC;AACGD,IAAAA,MAAM,EAAE,EADX;AAEG8B,IAAAA,YAAY,EAAE,CAFjB;AAGGM,IAAAA,UAAU,EAAE,EAHf;AAIGC,IAAAA,SAAS,EAAE,EAJd;AAKGC,IAAAA,SAAS,EAAE;AALd,GAjDwB;AAyD7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAE;AADL;AAzDkB,CAAlB,CAAf;AA8DA,eAAejG,cAAf","sourcesContent":["import React, { Component } from 'react'\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity } from 'react-native';\n\nimport HeaderButton from '../components/HeaderButton';\nimport { Ionicons } from '@expo/vector-icons'; \nimport Colors from '../constants/Colors';\nimport Modal from 'react-native-modal';\n\nclass SettingsScreen extends Component {\n\n    state = {\n        userId: -1,\n        username : '',\n        email: '',\n        energyTotal: 0,\n        isLoading: true,\n        password:'',\n        isUsernameModalVisible: false,\n        isPasswordModalVisible: false,\n        isDeleteAccountModalVisible:false,\n        isEnergyModalVisible:false,\n        isEmailModalVisible:false\n\n    }\n\n    componentDidMount = () => {\n        fetch('http://192.168.1.4:5000/getUserDetails', {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                userId:1\n            }),\n            method: 'POST'\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n                console.log(responseJson);\n                this.setState({\n                    userId: responseJson['userDetails']['id'],\n                    email: responseJson['userDetails']['email'],\n                    username: responseJson['userDetails']['username'],\n                    energyTotal: responseJson['userDetails']['energyTotal'],\n                    password: responseJson['userDetails']['password'],\n                    isLoading: !this.state.isLoading })\n                console.log(this.state);\n                \n        })\n        .catch((error) => {\n             console.error(error);\n             alert(\"User data didnt fetch\");\n            });\n        }\n        \n\n        // Username Modal\n        openUsernameModal = () =>{this.setState({isUsernameModalVisible:true})}\n        toggleUsernameModal = () =>{this.setState({isUsernameModalVisible:!this.state.isUsernameModalVisible})}\n        closeUsernameModal = () =>{this.setState({isUsernameModalVisible:false})}\n        // Email Modal\n        openEmailModal = () =>{this.setState({isEmailModalVisible:true})}\n        toggleEmailModal = () =>{this.setState({isEmailModalVisible:!this.state.isEmailModalVisible})}\n        closeEmailModal = () =>{this.setState({isEmailModalVisible:false})}\n        // Password Modal\n        openPasswordModal = () =>{this.setState({isPasswordModalVisible:true})}\n        togglePasswordModal = () =>{this.setState({isPasswordModalVisible:!this.state.isPasswordModalVisible})}\n        closePasswordModal = () =>{this.setState({isPasswordModalVisible:false})}\n        // Delete Account Modal\n        openDeleteAccountModal = () =>{this.setState({isDeleteAccountModalVisible:true})}\n        toggleDeleteAccountModal = () =>{this.setState({isDeleteAccountModalVisible:!this.state.isDeleteAccountModalVisible})}\n        closeDeleteAccountModal = () =>{this.setState({isDeleteAccountModalVisible:false})}\n        //Update Email\n        openModal = () =>{this.setState({isModalVisible:true})}\n        toggleModal = () =>{this.setState({isModalVisible:!this.state.isModalVisible})}\n        closeModal = () =>{this.setState({isModalVisible:false})}\n        //Update Energy\n        openEnergyModal = () =>{this.setState({isEnergyModalVisible:true})}\n        toggleEnergyModal = () =>{this.setState({isEnergyModalVisible:!this.state.isEnergyModalVisible})}\n        closeEnergyModal = () =>{this.setState({isEnergyModalVisible:false})}\n\n\n        updateSettings = (userId, username, email, password, energyTotal) => {\n            alert(userId+'username: ' + username + ' email: ' + email +' energyTotal: ' + energyTotal+ 'password:'+ password)\n            \n            fetch('http://192.168.1.4:5000/updateUser', {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                userId: userId,\n                email: email,\n                username: username,\n                energyTotal: energyTotal,\n                password: password\n            }),\n            method: 'POST'\n            })\n            .then((response) => response.json())\n            .then((responseJson) => {\n                console.log(responseJson);\n            })\n            .catch((error) => {\n                console.error(error);\n                alert(\"Update Failed\");\n                });\n        }\n        \n        render() {\n            console.log(this.state);\n\n            // if(!this.state.loading) {\n                return (\n                <View    style = {styles.screen}>\n\n                <View style={styles.inputLabels}>\n                <Text> </Text>\n\n                <TouchableOpacity    onPress={()=>this.openUsernameModal()}    underlayColor=\"white\">\n                    <View style={styles.button}>\n                        <Ionicons name=\"ios-add-circle-outline\" size={24} color=\"white\" />\n                        <Text style={styles.buttonText}> Update Username</Text>\n                    </View>\n                </TouchableOpacity>\n\n                <Text> </Text>\n                <TouchableOpacity    onPress={()=>this.openPasswordModal()}    underlayColor=\"white\">\n                    <View style={styles.button}>\n                        <Ionicons name=\"ios-add-circle-outline\" size={24} color=\"white\" />\n                        <Text style={styles.buttonText}> Update Password</Text>\n                    </View>\n                </TouchableOpacity>\n                <Text> </Text>\n                <TouchableOpacity    onPress={()=>this.openEmailModal()}    underlayColor=\"white\">\n                    <View style={styles.button}>\n                        <Ionicons name=\"ios-add-circle-outline\" size={24} color=\"white\" />\n                        <Text style={styles.buttonText}> Update Email</Text>\n                    </View>\n                </TouchableOpacity>\n                <Text> </Text>\n                <TouchableOpacity    onPress={()=>this.openEnergyModal()}    underlayColor=\"white\">\n                    <View style={styles.button}>\n                        <Ionicons name=\"ios-add-circle-outline\" size={24} color=\"white\" />\n                        <Text style={styles.buttonText}> Update Total Energy</Text>\n                    </View>\n                </TouchableOpacity>\n                <Text> </Text>\n                <TouchableOpacity    onPress={()=>this.openDeleteAccountModal()}    underlayColor=\"white\">\n                    <View style={styles.button}>\n                        <Ionicons name=\"ios-add-circle-outline\" size={24} color=\"white\" />\n                        <Text style={styles.buttonText}> Delete Account</Text>\n                    </View>\n                </TouchableOpacity>\n                </View>\n         \n         \n         \n         \n         \n         {/* USERNAME MODAL */}\n         \n         <View>\n            <Modal animationIn=\"slideInUp\" \n                animationOut=\"slideOutDown\" \n                onBackdropPress={()=>this.closeUsernameModal()}\n                onSwipeComplete={()=>this.closeUsernameModal()} \n                swipeDirection=\"right\" \n                isVisible={this.state.isUsernameModalVisible} \n                style={{backgroundColor:'white'}}>\n                <View style={{\n                        width:\"300\",\n                        height:\"300\"}}>\n                    <Text style = {styles.text}>Update Username </Text>\n                    <TextInput style = {styles.input}\n                        underlineColorAndroid = \"transparent\"\n                        placeholder = {this.state.username}\n                        autoCapitalize = \"none\"\n                        onChangeText = {this.username}/> \n\n\n                    <View style={{ flex: 1,justifyContent:'center',position:'absolute',bottom:0}}>\n                        <View style={{flexDirection:'row',}}>\n                            <TouchableOpacity style={{backgroundColor:'red',width:'50%'}} onPress={()=>this.closeUsernameModal()}>\n                                <Text style={{color:'white',textAlign:'center',padding:10}}>Cancel</Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity \n                            style={{backgroundColor:'green',width:'50%'}} \n                            onPress={()=>this.updateSettings(\n                                this.state.userId,\n                                this.state.username,\n                                this.state.email,\n                                this.state.password,\n                                this.state.energyTotal)} >\n                                <Text style={{color:'white',textAlign:'center',padding:10}}>Save</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </View>\n\n              </Modal>\n          </View>\n\n\n\n         {/* EMAIL MODAL */}\n\n\n\n          <View>\n            <Modal animationIn=\"slideInUp\" \n                animationOut=\"slideOutDown\" \n                onBackdropPress={()=>this.closeEmailModal()}\n                onSwipeComplete={()=>this.closeEmailModal()} \n                swipeDirection=\"right\" \n                isVisible={this.state.isEmailModalVisible} \n                width=\"90%\"\n                max-height=\"40%\"\n                style={{backgroundColor:'white'}}>\n\n                <Text style = {styles.text}>Update Email </Text>\n                <TextInput style = {styles.input}\n                    underlineColorAndroid = \"transparent\"\n                    placeholder = {this.state.email}\n                    // placeholderTextColor = {Colors.primaryColor}\n                    autoCapitalize = \"none\"\n                    onChangeText = {this.email}/> \n\n                <View style={{ flex: 1,justifyContent:'center',position:'absolute',bottom:0}}>\n                    <View style={{flexDirection:'row',}}>\n                        <TouchableOpacity style={{backgroundColor:'red',width:'50%'}} onPress={()=>this.closeEmailModal()}>\n                            <Text style={{color:'white',textAlign:'center',padding:10}}>Cancel</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity \n                          style={{backgroundColor:'green',width:'50%'}} \n                          onPress={()=>this.updateSettings(\n                            this.state.userId,\n                            this.state.username,\n                            this.state.email,\n                            this.state.password,\n                            this.state.energyTotal)} >\n                            <Text style={{color:'white',textAlign:'center',padding:10}}>Save</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n              </Modal>\n          </View>\n\n\n\n         {/* PASSWORD MODAL */}\n\n\n\n         <View>\n            <Modal animationIn=\"slideInUp\" \n                animationOut=\"slideOutDown\" \n                onBackdropPress={()=>this.closePasswordModal()}\n                onSwipeComplete={()=>this.closePasswordModal()} \n                swipeDirection=\"right\" \n                isVisible={this.state.isPasswordModalVisible} \n                width=\"90%\"\n                max-height=\"40%\"\n                style={{backgroundColor:'white'}}>\n\n                <Text style = {styles.text}>Update Password </Text>\n                <TextInput style = {styles.input}\n                    underlineColorAndroid = \"transparent\"\n                    placeholder = {this.state.username}\n                    // placeholderTextColor = {Colors.primaryColor}\n                    autoCapitalize = \"none\"\n                    onChangeText = {this.password}/> \n                <Text style = {styles.text}>Update Password Again </Text>\n                <TextInput style = {styles.input}\n                    underlineColorAndroid = \"transparent\"\n                    // placeholderTextColor = {Colors.primaryColor}\n                    autoCapitalize = \"none\"\n                    onChangeText = {this.password}/> \n\n                <View style={{ flex: 1,justifyContent:'center',position:'absolute',bottom:0}}>\n                    <View style={{flexDirection:'row',}}>\n                        <TouchableOpacity style={{backgroundColor:'red',width:'50%'}} onPress={()=>this.closePasswordModal()}>\n                            <Text style={{color:'white',textAlign:'center',padding:10}}>Cancel</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity \n                          style={{backgroundColor:'green',width:'50%'}} \n                          onPress={()=>this.updateSettings(\n                            this.state.userId,\n                            this.state.username,\n                            this.state.email,\n                            this.state.password,\n                            this.state.energyTotal)} >\n                            <Text style={{color:'white',textAlign:'center',padding:10}}>Save</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n              </Modal>\n          </View>\n\n\n         {/* ENERGY MODAL */}\n\n\n\n         <View>\n            <Modal animationIn=\"slideInUp\" \n                animationOut=\"slideOutDown\" \n                onBackdropPress={()=>this.closeEnergyModal()}\n                onSwipeComplete={()=>this.closeEnergyModal()} \n                swipeDirection=\"right\" \n                isVisible={this.state.isEnergyModalVisible} \n                width=\"90%\"\n                max-height=\"40%\"\n                style={{backgroundColor:'white'}}>\n\n                <Text style = {styles.text}>Update Energy </Text>\n                <TextInput style = {styles.input}\n                    underlineColorAndroid = \"transparent\"\n                    placeholder = {this.state.username}\n                    // placeholderTextColor = {Colors.primaryColor}\n                    autoCapitalize = \"none\"\n                    onChangeText = {this.energy}/> \n\n                <View style={{ flex: 1,justifyContent:'center',position:'absolute',bottom:0}}>\n                    <View style={{flexDirection:'row',}}>\n                        <TouchableOpacity style={{backgroundColor:'red',width:'50%'}} onPress={()=>this.closeEnergyModal()}>\n                            <Text style={{color:'white',textAlign:'center',padding:10}}>Cancel</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity \n                          style={{backgroundColor:'green',width:'50%'}} \n                          onPress={()=>this.updateSettings(\n                            this.state.userId,\n                            this.state.username,\n                            this.state.email,\n                            this.state.password,\n                            this.state.energyTotal)} >\n                            <Text style={{color:'white',textAlign:'center',padding:10}}>Save</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n              </Modal>\n          </View>\n\n\n\n\n\n\n\n\n\n         {/* DELETE MODAL */}\n\n\n\n         <View>\n            <Modal animationIn=\"slideInUp\" \n                animationOut=\"slideOutDown\" \n                onBackdropPress={()=>this.closeDeleteAccountModal()}\n                onSwipeComplete={()=>this.closeDeleteAccountModal()} \n                swipeDirection=\"right\" \n                isVisible={this.state.isDeleteAccountModalVisible} \n                width=\"90%\"\n                max-height=\"40%\"\n                style={{backgroundColor:'white'}}>\n                <Text style = {styles.text}>Are you sure you want to delete your account ??</Text>\n                <View style={{ flex: 1,justifyContent:'center',position:'absolute',bottom:0}}>\n                    <View style={{flexDirection:'row',}}>\n                        <TouchableOpacity style={{backgroundColor:'red',width:'50%'}} onPress={()=>this.closeDeleteAccountModal()}>\n                            <Text style={{color:'white',textAlign:'center',padding:10}}>Cancel</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity \n                          style={{backgroundColor:'green',width:'50%'}} \n                          onPress={()=>this.deleteUser(\n                            this.state.userId,\n                            this.state.username,\n                            this.state.email,\n                            this.state.password,\n                            this.state.energyTotal)} >\n                            <Text style={{color:'white',textAlign:'center',padding:10}}>Save</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n              </Modal>\n          </View>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </View>\n\n        \n\n                )\n            // }\n            // else{\n            //     return (\n            //         <ActivityIndicator size={\"large\"} ></ActivityIndicator>)\n            // }\n        }\n\n    // return <MealList listData={favMeals} navigation={props.navigation} />;\n};\n\nSettingsScreen.navigationOptions = navData => {\n    return {\n        headerTitle: 'Settings',\n        headerLeft: (\n            <HeaderButtons HeaderButtonComponent={HeaderButton}>\n                <Item\n                    title=\"Menu\"\n                    iconName=\"ios-menu\"\n                    onPress={() => {\n                        navData.navigation.toggleDrawer();\n                    }}\n                />\n            </HeaderButtons>\n        )\n    };\n};\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 15,\n        position: 'relative',\n        backgroundColor: '#ffffff'\n    },\n    inputLabels:{\n        justifyContent: 'flex-start',\n        padding: 10\n    },\n    title: {\n        fontFamily: 'open-sans-bold',\n        fontSize: 12,\n        margin: 20,\n        textAlign: 'center'\n    },\n    input:{\n        width: \"75%\",\n        zIndex: 2,\n        borderWidth:1\n    },\n\n    button: {\n\n        display: 'flex',\n        flexDirection: 'row',\n        height: 35,\n        borderRadius: 6,\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        backgroundColor: '#F8F8FF',\n        shadowColor: '#2AC062',\n        shadowOpacity: 0.5,\n        shadowOffset: { \n            height: 10, \n            width: 0 \n        },\n        shadowRadius: 25,\n        backgroundColor:    Colors.primaryColor\n        },\n        buttonText: {\n            textAlign: 'center',\n            padding: 20,\n            color: 'black'\n        },\n    text:{\n            height: 36,\n            borderRadius: 8,\n            marginLeft: 20,\n            marginTop: 20,\n            alignSelf: 'stretch',\n            // justifyContent: 'center'\n    },\n    container: {\n        paddingTop: 15\n    }\n});\n\nexport default SettingsScreen;\n"]},"metadata":{},"sourceType":"module"}