{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/iPollute/my-new-project/components/MealList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport MealItem from \"./MealItem\";\n\nvar MealList = function (_Component) {\n  _inherits(MealList, _Component);\n\n  var _super = _createSuper(MealList);\n\n  function MealList(props) {\n    var _this;\n\n    _classCallCheck(this, MealList);\n\n    _this = _super.call(this, props);\n\n    _this.setModalVisible = function (bool) {\n      _this.setState({\n        isModalVisible: bool\n      });\n    };\n\n    _this.setInputText = function (text) {\n      _this.setState({\n        inputText: text\n      });\n    };\n\n    _this.setEditedItem = function (id) {\n      _this.setState({\n        editedItem: id\n      });\n    };\n\n    _this.handleEditItem = function (editedItem) {\n      var newData = _this.state.data.map(function (item) {\n        if (item.id === editedItem) {\n          item.text = _this.state.inputText;\n          return item;\n        }\n\n        return item;\n      });\n\n      _this.setState({\n        data: newData\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TextInput, {\n        onPress: function onPress() {\n          _this.setModalVisible(true);\n\n          _this.setInputText(item.text), _this.setEditedItem(item.id);\n        },\n        underlayColor: '#f1f1f1',\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.item,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.marginLeft,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: [styles.menu, {\n          backgroundColor: item.color\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: [styles.menu, {\n          backgroundColor: item.color\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: [styles.menu, {\n          backgroundColor: item.color\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      })), React.createElement(Text, {\n        style: styles.text,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \" \", item.text, \" \")));\n    };\n\n    _this.initData = Data;\n    _this.state = {\n      data: _this.initData,\n      isModalVisible: false,\n      inputText: '',\n      editedItem: 0\n    };\n    return _this;\n  }\n\n  _createClass(MealList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.contentContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.headerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, \" List Header \")), React.createElement(FlatList, {\n        data: this.state.data,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: this.renderItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }), React.createElement(Modal, {\n        animationType: \"fade\",\n        visible: this.state.isModalVisible,\n        onRequestClose: function onRequestClose() {\n          return _this2.setModalVisible(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.modalView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"Change text:\"), React.createElement(TextInput, {\n        style: styles.textInput,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            inputText: text\n          });\n\n          console.log('state ', _this2.state.inputText);\n        },\n        defaultValue: this.state.inputText,\n        editable: true,\n        multiline: false,\n        maxLength: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this2.handleEditItem(_this2.state.editedItem);\n\n          _this2.setModalVisible(false);\n        },\n        style: [styles.touchableHighlight, {\n          backgroundColor: 'orange'\n        }],\n        underlayColor: '#f1f1f1',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, \"Save\")))));\n    }\n  }]);\n\n  return MealList;\n}(Component);\n\n;\nvar styles = StyleSheet.create({\n  list: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 15\n  },\n  header: {\n    height: 60,\n    backgroundColor: 'orange',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  contentContainer: {\n    backgroundColor: 'white'\n  },\n  item: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: 'grey',\n    alignItems: 'center'\n  },\n  marginLeft: {\n    marginLeft: 5\n  },\n  menu: {\n    width: 20,\n    height: 2,\n    backgroundColor: '#111',\n    margin: 2,\n    borderRadius: 3\n  },\n  text: {\n    marginVertical: 30,\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginLeft: 10\n  },\n  textInput: {\n    width: '90%',\n    marginLeft: 10,\n    marginRight: 10,\n    marginBottom: 30,\n    borderColor: 'gray',\n    borderBottomWidth: 2,\n    fontSize: 16\n  },\n  modalView: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  touchableHighlight: {\n    backgroundColor: 'white',\n    marginVertical: 10,\n    alignSelf: 'stretch',\n    alignItems: 'center'\n  }\n});\nexport default MealList;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/iPollute/my-new-project/components/MealList.js"],"names":["React","Component","MealItem","MealList","props","setModalVisible","bool","setState","isModalVisible","setInputText","text","inputText","setEditedItem","id","editedItem","handleEditItem","newData","state","data","map","item","renderItem","styles","marginLeft","menu","backgroundColor","color","initData","Data","contentContainer","header","headerText","toString","modalView","textInput","console","log","touchableHighlight","StyleSheet","create","list","flex","justifyContent","alignItems","padding","height","fontSize","fontWeight","flexDirection","borderBottomWidth","borderBottomColor","width","margin","borderRadius","marginVertical","marginRight","marginBottom","borderColor","alignSelf"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {StyleSheet, Text, View, FlatList,  TextInput, Modal  } from 'react-native';\n\n\nimport MealItem from './MealItem';\n\nclass MealList extends Component {\n  constructor(props) {\n      super(props);\n      this.initData = Data\n      this.state = {\n          data: this.initData,\n    isModalVisible: false,\n          inputText: '',\n          editedItem: 0, \n      };\n  }\n\n  setModalVisible = (bool) => {\n      this.setState({ isModalVisible: bool })\n  }\n\n  setInputText = (text) => {\n      this.setState({ inputText: text })\n  }\n\n  setEditedItem = (id) => {\n      this.setState({ editedItem: id })\n  }\n\n  handleEditItem = (editedItem) => {\n      const newData = this.state.data.map( item => {\n          if (item.id === editedItem ) {\n              item.text = this.state.inputText\n              return item\n          }\n          return item\n      })\n      this.setState({ data: newData })\n  }\n\n  renderItem = ({item}) => (\n    <TextInput onPress={() => {this.setModalVisible(true); this.setInputText(item.text), this.setEditedItem(item.id)}}\n        underlayColor={'#f1f1f1'}> \n        <View style={styles.item} >\n            <View style={styles.marginLeft}>\n                <View style={[styles.menu, { backgroundColor: item.color }]}></View>\n                <View style={[styles.menu, { backgroundColor: item.color }]}></View>\n                <View style={[styles.menu, { backgroundColor: item.color }]}></View>\n            </View>\n            <Text style={styles.text}> {item.text} </Text>\n        </View>\n    </TextInput>\n  )\n\n  render() {\n    return (\n        <View style={styles.contentContainer}>\n            <View style={styles.header}>\n                <Text style={styles.headerText}> List Header </Text>\n            </View>\n            <FlatList \n                data={this.state.data}\n                keyExtractor={(item) => item.id.toString()}\n                renderItem={this.renderItem}\n            />\n            <Modal animationType=\"fade\" visible={this.state.isModalVisible} \n                onRequestClose={() => this.setModalVisible(false)}>\n                <View style={styles.modalView}>\n                    <Text style={styles.text}>Change text:</Text>\n                    <TextInput\n                        style={styles.textInput}\n                        onChangeText={(text) => {this.setState({inputText: text}); console.log('state ', this.state.inputText)}}\n                        defaultValue={this.state.inputText}\n                        editable = {true}\n                        multiline = {false}\n                        maxLength = {200}\n                    /> \n                    <TouchableHighlight onPress={() => {this.handleEditItem(this.state.editedItem); this.setModalVisible(false)}} \n                        style={[styles.touchableHighlight, {backgroundColor: 'orange'}]} underlayColor={'#f1f1f1'}>\n                        <Text style={styles.text}>Save</Text>\n                    </TouchableHighlight>  \n                </View>           \n            </Modal> \n        </View>\n    )\n  }\n};\n\nconst styles = StyleSheet.create({\n    list: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 15\n    },\n    header: {\n        height: 60,\n        backgroundColor: 'orange',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    headerText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    contentContainer: {\n        backgroundColor: 'white',\n    },\n    item: {\n        flexDirection: 'row',\n        borderBottomWidth: 1,\n        borderBottomColor: 'grey',\n        alignItems: 'center',\n    },\n    marginLeft: {\n        marginLeft: 5,\n    },\n    menu: {\n        width: 20,\n        height: 2,\n        backgroundColor: '#111',\n        margin: 2,\n        borderRadius: 3,\n    },\n    text: {\n        marginVertical: 30,\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginLeft: 10,\n    },\n\n    textInput: {\n        width: '90%',\n        marginLeft: 10,\n        marginRight: 10,\n        marginBottom: 30,\n        borderColor: 'gray', \n        borderBottomWidth: 2,\n        fontSize: 16,\n    },\n    modalView: {\n        flex: 1, \n        backgroundColor: 'white',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    touchableHighlight: {\n        backgroundColor: 'white', \n        marginVertical: 10,\n        alignSelf: 'stretch',\n        alignItems: 'center',\n    } \n});\n\nexport default MealList;\n\n\n\n"]},"metadata":{},"sourceType":"module"}