{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/my-new-project/screens/SettignsScreen.js\",\n    _this2 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport HeaderButton from \"../components/HeaderButton\";\n\nvar SettingsScreen = function (_Component) {\n  _inherits(SettingsScreen, _Component);\n\n  var _super = _createSuper(SettingsScreen);\n\n  function SettingsScreen() {\n    var _this;\n\n    _classCallCheck(this, SettingsScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      orderData: [],\n      isLoading: true,\n      isDisabled: true\n    };\n\n    _this.componentDidMount = function () {\n      fetch('http://0.0.0.0:5000/getCustomer', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        for (var key in responseJson['orders']) {\n          _this.state.orderData.push(responseJson['orders'][key]);\n        }\n\n        _this.setState({\n          isLoading: !_this.state.isLoading\n        });\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"Transport data didnt fetch\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SettingsScreen, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.orderData);\n\n      if (!this.state.loading) {\n        return React.createElement(MealList, {\n          listData: this.state.orderData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }\n        });\n      } else {\n        return React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  }]);\n\n  return SettingsScreen;\n}(Component);\n\n;\n\nSettingsScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'Settings',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  title: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 12,\n    margin: 20,\n    textAlign: 'center'\n  },\n  filterContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '80%',\n    marginVertical: 15\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/my-new-project/screens/SettignsScreen.js"],"names":["React","HeaderButtons","Item","HeaderButton","SettingsScreen","state","orderData","isLoading","isDisabled","componentDidMount","fetch","headers","method","then","response","json","responseJson","console","log","key","push","setState","catch","error","alert","loading","Component","navigationOptions","navData","headerTitle","headerLeft","navigation","toggleDrawer","styles","StyleSheet","create","screen","flex","alignItems","title","fontFamily","fontSize","margin","textAlign","filterContainer","flexDirection","justifyContent","width","marginVertical"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { View, Text, StyleSheet } from 'react-native';\n\nimport HeaderButton from '../components/HeaderButton';\n\nclass SettingsScreen extends Component {\n\n  state = {\n    orderData: [],\n    isLoading: true,\n    isDisabled: true\n  }\n\n  componentDidMount = () => {\n    fetch('http://0.0.0.0:5000/getCustomer', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n       method: 'GET'\n    })\n    .then((response) => response.json())\n    .then((responseJson) => {\n       console.log(responseJson);\n       for (const key in responseJson['orders']){\n         // console.log(\"key:\",responseJson['transportObjects'][key])\n         this.state.orderData.push(responseJson['orders'][key])\n        }\n        this.setState({isLoading: !this.state.isLoading })\n    })\n    .catch((error) => {\n       console.error(error);\n       alert(\"Transport data didnt fetch\");\n  \n      });\n    }\n    \n\n\n    render() {\n      console.log(this.state.orderData);\n  \n      if(!this.state.loading) {\n        return (\n            <MealList listData={this.state.orderData} />\n        )\n      }\n      else{\n        return (\n          <ActivityIndicator size={\"large\"} ></ActivityIndicator>)\n      }\n    }\n\n  // return <MealList listData={favMeals} navigation={props.navigation} />;\n};\n\nSettingsScreen.navigationOptions = navData => {\n  return {\n    headerTitle: 'Settings',\n    headerLeft: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName=\"ios-menu\"\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    )\n  };\n};\n\nconst styles = StyleSheet.create({\n    screen: {\n      flex: 1,\n      alignItems: 'center'\n    },\n    title: {\n      fontFamily: 'open-sans-bold',\n      fontSize: 12,\n      margin: 20,\n      textAlign: 'center'\n    },\n    filterContainer: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      width: '80%',\n      marginVertical: 15\n    }\n  });\n\nexport default SettingsScreen;\n"]},"metadata":{},"sourceType":"module"}