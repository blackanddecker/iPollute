{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/iPollute/my-new-project/components/FormTextInput.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { TextInputProps } from \"react-native-web/dist/index\";\nimport colors from \"../constants/Colors\";\n\nvar FormTextInput = function (_React$Component) {\n  _inherits(FormTextInput, _React$Component);\n\n  var _super = _createSuper(FormTextInput);\n\n  function FormTextInput() {\n    _classCallCheck(this, FormTextInput);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FormTextInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          otherProps = _objectWithoutProperties(_this$props, [\"style\"]);\n\n      return React.createElement(TextInput, _extends({\n        selectionColor: colors.DODGER_BLUE,\n        style: [styles.textInput, style]\n      }, otherProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return FormTextInput;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  textInput: {\n    height: 40,\n    borderColor: colors.SILVER,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    marginBottom: 20\n  }\n});\nexport default FormTextInput;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/iPollute/my-new-project/components/FormTextInput.js"],"names":["React","TextInputProps","colors","FormTextInput","props","style","otherProps","DODGER_BLUE","styles","textInput","Component","StyleSheet","create","height","borderColor","SILVER","borderBottomWidth","hairlineWidth","marginBottom"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;SACgCC,c;AAChC,OAAOC,MAAP;;IAKMC,a;;;;;;;;;;;;;6BACK;AAAA,wBAO0B,KAAKC,KAP/B;AAAA,UAOCC,KAPD,eAOCA,KAPD;AAAA,UAOWC,UAPX;;AAQP,aACE,oBAAC,SAAD;AACE,QAAA,cAAc,EAAEJ,MAAM,CAACK,WADzB;AAIE,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBJ,KAAnB;AAJT,SAMMC,UANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAUD;;;;EAnByBN,KAAK,CAACU,S;;AAsBlC,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,WAAW,EAAEZ,MAAM,CAACa,MAFX;AAGTC,IAAAA,iBAAiB,EAAEL,UAAU,CAACM,aAHrB;AAITC,IAAAA,YAAY,EAAE;AAJL;AADoB,CAAlB,CAAf;AASA,eAAef,aAAf","sourcesContent":["import * as React from \"react\";\nimport { StyleSheet, TextInput, TextInputProps } from \"react-native\";\nimport colors from '../constants/Colors';\n\n// We support all the TextInput props\ntype Props = TextInputProps;\n\nclass FormTextInput extends React.Component<Props> {\n  render() {\n    // We define our own custom style for the TextInput, but\n    // we still want to allow the developer to supply its\n    // own additional style if needed.\n    // To do so, we extract the \"style\" prop from all the\n    // other props to prevent it to override our own custom\n    // style.\n    const { style, ...otherProps } = this.props;\n    return (\n      <TextInput\n        selectionColor={colors.DODGER_BLUE}\n        // Add the externally specified style to our own\n        // custom one\n        style={[styles.textInput, style]}\n        // ...and then spread all the other props\n        {...otherProps}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  textInput: {\n    height: 40,\n    borderColor: colors.SILVER,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    marginBottom: 20\n  }\n});\n\nexport default FormTextInput;"]},"metadata":{},"sourceType":"module"}