{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/SettignsScreen.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport HeaderButton from \"../components/HeaderButton\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Colors from \"../constants/Colors\";\n\nvar SettingsScreen = function (_Component) {\n  _inherits(SettingsScreen, _Component);\n\n  var _super = _createSuper(SettingsScreen);\n\n  function SettingsScreen() {\n    var _this;\n\n    _classCallCheck(this, SettingsScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      username: '',\n      email: '',\n      energyTotal: 0,\n      isLoading: true,\n      isModalVisible: false\n    };\n\n    _this.componentDidMount = function () {\n      fetch('http://192.168.1.4:5000/getUserDetails', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: 1\n        }),\n        method: 'POST'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this.setState({\n          email: responseJson['email'],\n          username: responseJson['username'],\n          energyTotal: responseJson['energyTotal'],\n          isLoading: !_this.state.isLoading\n        });\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"User data didnt fetch\");\n      });\n    };\n\n    _this.openModal = function () {\n      _this.setState({\n        isModalVisible: true\n      });\n    };\n\n    _this.toggleModal = function () {\n      _this.setState({\n        isModalVisible: !_this.state.isModalVisible\n      });\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        isModalVisible: false\n      });\n    };\n\n    _this.updateSettings = function (username, email, energyTotal) {\n      alert('username: ' + username + ' email: ' + email + ' energyTotal: ' + energyTotal);\n    };\n\n    return _this;\n  }\n\n  _createClass(SettingsScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      return React.createElement(View, {\n        style: styles.screen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.inputLabels,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, \" \"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.openModal();\n        },\n        underlayColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-add-circle-outline\",\n        size: 24,\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, \" Update Username\"))), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, \" \"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.openFoodModal();\n        },\n        underlayColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-add-circle-outline\",\n        size: 24,\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, \" Update Password\"))), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, \" \"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.openFoodModal();\n        },\n        underlayColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-add-circle-outline\",\n        size: 24,\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, \" Update Email\"))), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, \" \"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.openFoodModal();\n        },\n        underlayColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-add-circle-outline\",\n        size: 24,\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, \" Delete Account\")))), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, \"Update Username \"), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: this.state.username,\n        autoCapitalize: \"none\",\n        onChangeText: this.handleHours,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 12\n        }\n      }, \"Update Email \"), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: this.state.email,\n        autoCapitalize: \"none\",\n        onChangeText: this.handleHours,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 12\n        }\n      }, \"Update Total Energy \"), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        keyboardType: \"numeric\",\n        placeholder: \"\",\n        autoCapitalize: \"none\",\n        onChangeText: this.handleenergyTotal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }, \" \"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.updateSettings(_this2.state.username, _this2.state.email, _this2.state.energyTotal);\n        },\n        underlayColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, \" Save\"))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 6\n        }\n      }, React.createElement(Modal, {\n        animationIn: \"slideInUp\",\n        animationOut: \"slideOutDown\",\n        onBackdropPress: function onBackdropPress() {\n          return _this2.closeTransportModal();\n        },\n        onSwipeComplete: function onSwipeComplete() {\n          return _this2.closeTransportModal();\n        },\n        swipeDirection: \"right\",\n        isVisible: this.state.isModalVisible,\n        width: \"90%\",\n        \"max-height\": \"40%\",\n        style: {\n          backgroundColor: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 7\n        }\n      }, \"Add Hours: \")), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          position: 'absolute',\n          bottom: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: 'red',\n          width: '50%'\n        },\n        onPress: function onPress() {\n          return _this2.closeTransportModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }, \"Cancel\")), React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: 'green',\n          width: '50%'\n        },\n        onPress: function onPress() {\n          return _this2.insertOrder();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      }, \"Ok\")))))));\n    }\n  }]);\n\n  return SettingsScreen;\n}(Component);\n\n;\n\nSettingsScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'Settings',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 15,\n    position: 'relative',\n    backgroundColor: '#ffffff'\n  },\n  inputLabels: {\n    justifyContent: 'flex-start',\n    padding: 10\n  },\n  title: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 12,\n    margin: 20,\n    textAlign: 'center'\n  },\n  input: {\n    width: \"75%\",\n    zIndex: 2,\n    borderBottomWidth: 1\n  },\n  button: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: 35,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    backgroundColor: '#F8F8FF',\n    shadowColor: '#2AC062',\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      height: 10,\n      width: 0\n    },\n    shadowRadius: 25,\n    backgroundColor: Colors.primaryColor\n  },\n  buttonText: {\n    textAlign: 'center',\n    padding: 20,\n    color: 'black'\n  },\n  text: {\n    height: 36,\n    borderRadius: 8,\n    marginLeft: 20,\n    marginTop: 20,\n    alignSelf: 'stretch'\n  },\n  container: {\n    paddingTop: 15\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/SettignsScreen.js"],"names":["React","Component","HeaderButtons","Item","HeaderButton","Ionicons","Colors","SettingsScreen","state","username","email","energyTotal","isLoading","isModalVisible","componentDidMount","fetch","headers","body","JSON","stringify","userId","method","then","response","json","responseJson","console","log","setState","catch","error","alert","openModal","toggleModal","closeModal","updateSettings","styles","screen","inputLabels","button","buttonText","openFoodModal","text","input","handleHours","handleenergyTotal","closeTransportModal","backgroundColor","flex","justifyContent","position","bottom","flexDirection","width","color","textAlign","padding","insertOrder","navigationOptions","navData","headerTitle","headerLeft","navigation","toggleDrawer","StyleSheet","create","alignItems","marginBottom","title","fontFamily","fontSize","margin","zIndex","borderBottomWidth","display","height","borderRadius","shadowColor","shadowOpacity","shadowOffset","shadowRadius","primaryColor","marginLeft","marginTop","alignSelf","container","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity } from 'react-native';\n\nimport HeaderButton from '../components/HeaderButton';\nimport { Ionicons } from '@expo/vector-icons'; \nimport Colors from '../constants/Colors';\n\nclass SettingsScreen extends Component {\n\n  state = {\n    username : '',\n    email: '',\n    energyTotal: 0,\n    isLoading: true,\n    isModalVisible: false\n  }\n\n  componentDidMount = () => {\n    fetch('http://192.168.1.4:5000/getUserDetails', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        userId:1\n      }),\n      method: 'POST'\n    })\n    .then((response) => response.json())\n    .then((responseJson) => {\n        console.log(responseJson);\n        this.setState({\n          email: responseJson['email'],\n          username: responseJson['username'],\n          energyTotal: responseJson['energyTotal'],\n          isLoading: !this.state.isLoading })\n        \n    })\n    .catch((error) => {\n       console.error(error);\n       alert(\"User data didnt fetch\");\n      });\n    }\n    \n\n\n    openModal = () =>{\n      this.setState({\n        isModalVisible:true\n      })\n    }\n  \n    toggleModal = () =>{\n      this.setState({\n        isModalVisible:!this.state.isModalVisible\n      })\n    }\n  \n    closeModal = () =>{\n      this.setState({\n        isModalVisible:false\n      })\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    updateSettings = (username, email, energyTotal) => {\n      alert('username: ' + username + ' email: ' + email +' energyTotal: ' + energyTotal)\n    }\n    \n    render() {\n      console.log(this.state);\n\n      // if(!this.state.loading) {\n        return (\n        <View  style = {styles.screen}>\n\n\n        <View style={styles.inputLabels}>\n        <Text> </Text>\n\n        <TouchableOpacity  onPress={()=>this.openModal()}  underlayColor=\"white\">\n          <View style={styles.button}>\n            <Ionicons name=\"ios-add-circle-outline\" size={24} color=\"white\" />\n            <Text style={styles.buttonText}> Update Username</Text>\n          </View>\n        </TouchableOpacity>\n\n        <Text> </Text>\n        <TouchableOpacity  onPress={()=>this.openFoodModal()}  underlayColor=\"white\">\n          <View style={styles.button}>\n            <Ionicons name=\"ios-add-circle-outline\" size={24} color=\"white\" />\n            <Text style={styles.buttonText}> Update Password</Text>\n          </View>\n        </TouchableOpacity>\n        <Text> </Text>\n        <TouchableOpacity  onPress={()=>this.openFoodModal()}  underlayColor=\"white\">\n          <View style={styles.button}>\n            <Ionicons name=\"ios-add-circle-outline\" size={24} color=\"white\" />\n            <Text style={styles.buttonText}> Update Email</Text>\n          </View>\n        </TouchableOpacity>\n        <Text> </Text>\n        <TouchableOpacity  onPress={()=>this.openFoodModal()}  underlayColor=\"white\">\n          <View style={styles.button}>\n            <Ionicons name=\"ios-add-circle-outline\" size={24} color=\"white\" />\n            <Text style={styles.buttonText}> Delete Account</Text>\n          </View>\n        </TouchableOpacity>\n        </View>\n\n\n          <Text style = {styles.text}>Update Username </Text>\n          <TextInput style = {styles.input}\n            underlineColorAndroid = \"transparent\"\n            placeholder = {this.state.username}\n            // placeholderTextColor = {Colors.primaryColor}\n            autoCapitalize = \"none\"\n            onChangeText = {this.handleHours}/> \n          \n           <Text style = {styles.text}>Update Email </Text>\n\n          <TextInput style = {styles.input}\n            underlineColorAndroid = \"transparent\"\n            placeholder = {this.state.email}\n            // placeholderTextColor = {Colors.primaryColor}\n            autoCapitalize = \"none\"\n            onChangeText = {this.handleHours}/>\n          \n           <Text style = {styles.text}>Update Total Energy </Text>\n\n          <TextInput style = {styles.input}\n            underlineColorAndroid = \"transparent\"\n            keyboardType = 'numeric'\n            placeholder = ''//{(this.state.energyTotal).toString()}\n\n            // placeholderTextColor = {Colors.primaryColor}\n            autoCapitalize = \"none\"\n            onChangeText = {this.handleenergyTotal}/>\n\n          <Text > </Text>\n\n          <TouchableOpacity  onPress={()=>this.updateSettings(this.state.username, this.state.email, this.state.energyTotal)}  underlayColor=\"white\">\n          <View style={styles.button}>\n            <Text style={styles.buttonText}> Save</Text>\n          </View>\n        </TouchableOpacity> \n     <View>\n\n      <Modal animationIn=\"slideInUp\" \n        animationOut=\"slideOutDown\" \n        onBackdropPress={()=>this.closeTransportModal()}\n        onSwipeComplete={()=>this.closeTransportModal()} \n        swipeDirection=\"right\" \n        isVisible={this.state.isModalVisible} \n        width=\"90%\"\n        max-height=\"40%\"\n        style={{backgroundColor:'white'}}>\n\n    <View style={{ flex: 1,justifyContent:'center'}}>\n      <Text style = {styles.text}>Add Hours: </Text>\n    </View>\n\n\n    <View style={{ flex: 1,justifyContent:'center',position:'absolute',bottom:0}}>\n        <View style={{flexDirection:'row',}}>\n          <TouchableOpacity style={{backgroundColor:'red',width:'50%'}} onPress={()=>this.closeTransportModal()}>\n          <Text style={{color:'white',textAlign:'center',padding:10}}>Cancel</Text>\n          </TouchableOpacity>\n        <TouchableOpacity style={{backgroundColor:'green',width:'50%'}} onPress={()=>this.insertOrder()}>\n          <Text style={{color:'white',textAlign:'center',padding:10}}>Ok</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n\n      </View>\n    </View>\n\n\n\n        )\n      // }\n      // else{\n      //   return (\n      //     <ActivityIndicator size={\"large\"} ></ActivityIndicator>)\n      // }\n    }\n\n  // return <MealList listData={favMeals} navigation={props.navigation} />;\n};\n\nSettingsScreen.navigationOptions = navData => {\n  return {\n    headerTitle: 'Settings',\n    headerLeft: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName=\"ios-menu\"\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    )\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 15,\n    position: 'relative',\n    backgroundColor: '#ffffff'\n  },\n  inputLabels:{\n    justifyContent: 'flex-start',\n    padding: 10\n  },\n  title: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 12,\n    margin: 20,\n    textAlign: 'center'\n  },\n  input:{\n    width: \"75%\",\n    zIndex: 2,\n    borderBottomWidth:1\n  },\n\n  button: {\n\n    display: 'flex',\n    flexDirection: 'row',\n    height: 35,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    backgroundColor: '#F8F8FF',\n    shadowColor: '#2AC062',\n    shadowOpacity: 0.5,\n    shadowOffset: { \n      height: 10, \n      width: 0 \n    },\n    shadowRadius: 25,\n    backgroundColor:  Colors.primaryColor\n    },\n    buttonText: {\n      textAlign: 'center',\n      padding: 20,\n      color: 'black'\n    },\n  text:{\n      height: 36,\n      borderRadius: 8,\n      marginLeft: 20,\n      marginTop: 20,\n      alignSelf: 'stretch',\n      // justifyContent: 'center'\n  },\n  container: {\n    paddingTop: 15\n  }\n});\n\nexport default SettingsScreen;\n"]},"metadata":{},"sourceType":"module"}