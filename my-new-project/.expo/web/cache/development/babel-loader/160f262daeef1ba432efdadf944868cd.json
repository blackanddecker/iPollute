{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/CategoriesScreen.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport Modal from 'react-native-modal';\nimport { Ionicons } from '@expo/vector-icons';\nimport HeaderButton from \"../components/HeaderButton\";\nimport Colors from \"../constants/Colors\";\nimport { PieChart, ProgressChart } from 'react-native-chart-kit';\n\nvar CategoriesScreen = function (_Component) {\n  _inherits(CategoriesScreen, _Component);\n\n  var _super = _createSuper(CategoriesScreen);\n\n  function CategoriesScreen() {\n    var _this;\n\n    _classCallCheck(this, CategoriesScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      userId: 1,\n      energyType: '',\n      transportId: '',\n      foodId: '',\n      cost: '',\n      transportData: [],\n      foodData: [],\n      isTransportLoading: true,\n      isFoodLoading: true,\n      isDisabled: true,\n      isTransportModalVisible: false,\n      isFoodModalVisible: false\n    };\n\n    _this.componentDidMount = function () {\n      fetch('http://192.168.1.4:5000/getTransportObjects', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: 1\n        }),\n        method: 'POST'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        for (var key in responseJson['transportObjects']) {\n          _this.state.transportData.push(responseJson['transportObjects'][key]);\n        }\n\n        _this.setState({\n          isTransportLoading: !_this.state.isTransportLoading\n        });\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"Transport data didnt fetch\");\n      });\n      fetch('http://192.168.1.4:5000/getFoodObjects', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: 1\n        }),\n        method: 'POST'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        for (var key in responseJson['foodObjects']) {\n          _this.state.foodData.push(responseJson['foodObjects'][key]);\n        }\n\n        _this.setState({\n          isFoodLoading: !_this.state.isFoodLoading\n        });\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"Transport data didnt fetch\");\n      });\n    };\n\n    _this.insertEnergy = function (userId, foodId, transportId, cost) {\n      fetch('http://192.168.1.4:5000/insertEnergy', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          userId: userId,\n          foodId: foodId,\n          transportId: transportId,\n          cost: cost,\n          datatime: new Date()\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        if (responseJson['success'] == true) {\n          alert(\"Insert Order Succefully\");\n        } else {\n          alert(\"Insert Order Failed\");\n        }\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"Insert Order Error\");\n      });\n    };\n\n    _this.updateTransport = function (transport) {\n      _this.setState({\n        transport: transport\n      });\n    };\n\n    _this.updateFood = function (food) {\n      _this.setState({\n        food: food\n      });\n    };\n\n    _this.handleHours = function (float) {\n      _this.setState({\n        hours: float\n      });\n    };\n\n    _this.handleTransport = function (text) {\n      _this.setState({\n        transport: text\n      });\n    };\n\n    _this.openTransportModal = function () {\n      _this.setState({\n        isTransportModalVisible: true\n      });\n    };\n\n    _this.toggleTransportModal = function () {\n      _this.setState({\n        isTransportModalVisible: !_this.state.isTransportModalVisible\n      });\n    };\n\n    _this.closeTransportModal = function () {\n      _this.setState({\n        isTransportModalVisible: false\n      });\n    };\n\n    _this.openFoodModal = function () {\n      _this.setState({\n        isFoodModalVisible: true\n      });\n    };\n\n    _this.toggleFoodModal = function () {\n      _this.setState({\n        isFoodModalVisible: !_this.state.isFoodModalVisible\n      });\n    };\n\n    _this.closeFoodModal = function () {\n      _this.setState({\n        isFoodModalVisible: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoriesScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = {\n        labels: ['Transport', 'Food', 'Total'],\n        data: [0.2, 0.45, 1]\n      };\n      var chartConfig = {\n        backgroundGradientFrom: '#1E2923',\n        backgroundGradientTo: '#08130D',\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(26, 255, 146, \" + opacity + \")\";\n        }\n      };\n\n      if (!this.state.loading) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }\n        }, React.createElement(ProgressChart, {\n          data: data,\n          width: 360,\n          height: 220,\n          chartConfig: chartConfig,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }\n        }), React.createElement(View, {\n          style: styles.inputLabels,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }\n        }, \" \"), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.openTransportModal();\n          },\n          underlayColor: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }\n        }, React.createElement(Ionicons, {\n          name: \"ios-add-circle-outline\",\n          size: 24,\n          color: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }\n        }), React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }\n        }, \" Transport Emission\"))), React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }\n        }, \" \"), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.openFoodModal();\n          },\n          underlayColor: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }\n        }, React.createElement(Ionicons, {\n          name: \"ios-add-circle-outline\",\n          size: 24,\n          color: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }\n        }), React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }\n        }, \" Food Emission\")))), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }\n        }, React.createElement(Modal, {\n          animationIn: \"slideInUp\",\n          animationOut: \"slideOutDown\",\n          onBackdropPress: function onBackdropPress() {\n            return _this2.closeTransportModal();\n          },\n          onSwipeComplete: function onSwipeComplete() {\n            return _this2.closeTransportModal();\n          },\n          swipeDirection: \"right\",\n          isVisible: this.state.isTransportModalVisible,\n          width: \"90%\",\n          \"max-height\": \"40%\",\n          style: {\n            backgroundColor: 'white'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }\n        }, React.createElement(Picker, {\n          selectedValue: this.state.transport,\n          onValueChange: this.updateTransport,\n          style: styles.input,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }\n        }, this.state.transportData.map(function (transports, id) {\n          return React.createElement(Picker.Item, {\n            value: transports.item,\n            label: transports.description,\n            key: transports.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 44\n            }\n          });\n        })), React.createElement(Text, {\n          style: styles.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }\n        }, \"Add Hours: \"), React.createElement(TextInput, {\n          style: styles.input,\n          underlineColorAndroid: \"transparent\",\n          placeholder: \" Hours (fe 1.3)\",\n          placeholderTextColor: Colors.primaryColor,\n          autoCapitalize: \"none\",\n          onChangeText: this.handleHours,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }\n        })), React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            position: 'absolute',\n            bottom: 0\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            backgroundColor: 'red',\n            width: '50%'\n          },\n          onPress: function onPress() {\n            return _this2.closeTransportModal();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'white',\n            textAlign: 'center',\n            padding: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 37\n          }\n        }, \"Cancel\")), React.createElement(TouchableOpacity, {\n          style: {\n            backgroundColor: 'green',\n            width: '50%'\n          },\n          onPress: function onPress() {\n            return _this2.insertEnergy();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'white',\n            textAlign: 'center',\n            padding: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 37\n          }\n        }, \"Ok\")))))), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }\n        }, React.createElement(Modal, {\n          animationIn: \"slideInUp\",\n          animationOut: \"slideOutDown\",\n          onBackdropPress: function onBackdropPress() {\n            return _this2.closeFoodModal();\n          },\n          onSwipeComplete: function onSwipeComplete() {\n            return _this2.closeFoodModal();\n          },\n          swipeDirection: \"right\",\n          isVisible: this.state.isFoodModalVisible,\n          width: \"90%\",\n          \"max-height\": \"40%\",\n          style: {\n            backgroundColor: 'white'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 21\n          }\n        }, React.createElement(Picker, {\n          selectedValue: this.state.food,\n          onValueChange: this.updateFood,\n          style: styles.input,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }\n        }, this.state.foodData.map(function (foods, id) {\n          return React.createElement(Picker.Item, {\n            value: foods.item,\n            label: foods.description,\n            key: foods.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 44\n            }\n          });\n        })), React.createElement(Text, {\n          style: styles.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }\n        }, \"Add Hours: \"), React.createElement(TextInput, {\n          style: styles.input,\n          underlineColorAndroid: \"transparent\",\n          placeholder: \" Hours (fe 1.3)\",\n          placeholderTextColor: Colors.primaryColor,\n          autoCapitalize: \"none\",\n          onChangeText: this.handleHours,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }\n        })), React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            position: 'absolute',\n            bottom: 0\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            backgroundColor: 'red',\n            width: '50%'\n          },\n          onPress: function onPress() {\n            return _this2.closeFoodModal();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'white',\n            textAlign: 'center',\n            padding: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 37\n          }\n        }, \"Cancel\")), React.createElement(TouchableOpacity, {\n          style: {\n            backgroundColor: 'green',\n            width: '50%'\n          },\n          onPress: function onPress() {\n            return _this2.insertEnergy();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'white',\n            textAlign: 'center',\n            padding: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 37\n          }\n        }, \"Ok\")))))));\n      } else {\n        return React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 20\n          }\n        });\n      }\n    }\n  }]);\n\n  return CategoriesScreen;\n}(Component);\n\nCategoriesScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'My Energy',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  container: {\n    flex: 1\n  },\n  input: {\n    margin: 5,\n    height: 30,\n    borderColor: Colors.primaryColor,\n    borderWidth: 1\n  },\n  inputLabels: {\n    justifyContent: 'flex-start',\n    padding: 10\n  },\n  submitButton: {\n    backgroundColor: Colors.primaryColor,\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    color: 'white'\n  },\n  modal: {\n    flex: 1,\n    width: 300,\n    height: 300,\n    alignItems: 'center',\n    backgroundColor: '#f7021a'\n  },\n  button: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: 60,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    backgroundColor: '#2AC062',\n    shadowColor: '#2AC062',\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      height: 10,\n      width: 0\n    },\n    shadowRadius: 25,\n    backgroundColor: Colors.primaryColor\n  },\n  buttonText: {\n    textAlign: 'center',\n    padding: 20,\n    color: 'white'\n  }\n});\nexport default CategoriesScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/iPollute/my-new-project/screens/CategoriesScreen.js"],"names":["React","Component","HeaderButtons","Item","Modal","Ionicons","HeaderButton","Colors","PieChart","ProgressChart","CategoriesScreen","state","userId","energyType","transportId","foodId","cost","transportData","foodData","isTransportLoading","isFoodLoading","isDisabled","isTransportModalVisible","isFoodModalVisible","componentDidMount","fetch","headers","body","JSON","stringify","method","then","response","json","responseJson","console","log","key","push","setState","catch","error","alert","insertEnergy","datatime","Date","updateTransport","transport","updateFood","food","handleHours","float","hours","handleTransport","text","openTransportModal","toggleTransportModal","closeTransportModal","openFoodModal","toggleFoodModal","closeFoodModal","data","labels","chartConfig","backgroundGradientFrom","backgroundGradientTo","color","opacity","loading","styles","inputLabels","button","buttonText","backgroundColor","flex","justifyContent","input","map","transports","id","item","description","primaryColor","position","bottom","flexDirection","width","textAlign","padding","foods","navigationOptions","navData","headerTitle","headerLeft","navigation","toggleDrawer","StyleSheet","create","screen","alignItems","container","margin","height","borderColor","borderWidth","submitButton","submitButtonText","modal","display","borderRadius","shadowColor","shadowOpacity","shadowOffset","shadowRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n    View,\n    Text,\n    TextInput,\n    ActivityIndicator,\n    StyleSheet,\n    Picker,\n    Button,\n    TouchableOpacity\n} from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport Modal from 'react-native-modal';\nimport { Ionicons } from '@expo/vector-icons'; \nimport HeaderButton from '../components/HeaderButton';\nimport Colors from '../constants/Colors';\nimport {\n    PieChart,\n    ProgressChart\n} from 'react-native-chart-kit'\n\nclass CategoriesScreen extends Component {\n\n    state = {\n\n        userId: 1,\n        energyType:'',\n        transportId: '',\n        foodId: '',\n        cost: '',\n        transportData: [],\n        foodData: [],\n\n        isTransportLoading: true,\n        isFoodLoading: true,\n        isDisabled: true,\n        isTransportModalVisible: false,\n        isFoodModalVisible: false\n\n }\n\n \n    componentDidMount = () => {\n        fetch('http://192.168.1.4:5000/getTransportObjects', {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                userId:1\n            }),\n            method: 'POST'\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            console.log(responseJson);\n            for (const key in responseJson['transportObjects']){\n                // console.log(\"key:\",responseJson['transportObjects'][key])\n                this.state.transportData.push(responseJson['transportObjects'][key])\n                }\n                this.setState({isTransportLoading: !this.state.isTransportLoading })\n        })\n        .catch((error) => {\n            console.error(error);\n            alert(\"Transport data didnt fetch\");\n\n        });\n\n        fetch('http://192.168.1.4:5000/getFoodObjects', {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                userId:1\n            }),\n            method: 'POST'\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            console.log(responseJson);\n            for (const key in responseJson['foodObjects']){\n                // console.log(\"key:\",responseJson['transportObjects'][key])\n                this.state.foodData.push(responseJson['foodObjects'][key])\n                }\n                this.setState({isFoodLoading: !this.state.isFoodLoading })\n        })\n        .catch((error) => {\n            console.error(error);\n            alert(\"Transport data didnt fetch\");\n\n        });\n\n    }\n\n\n    insertEnergy = (userId, foodId, transportId, cost) => {\n        fetch('http://192.168.1.4:5000/insertEnergy', {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                userId: userId,\n                foodId: foodId,\n                transportId: transportId,\n                cost: cost,\n                datatime: new Date()\n            })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            console.log(responseJson);\n            if(responseJson['success'] == true){\n                alert(\"Insert Order Succefully\");\n            }\n            else{\n                alert(\"Insert Order Failed\");\n            }\n        })\n        .catch((error) => {\n            console.error(error);\n            alert(\"Insert Order Error\");\n        });\n    }\n\n    updateTransport = (transport) => {this.setState({ transport: transport })}\n    updateFood = (food) => {this.setState({ food: food })}\n\n    handleHours = (float) => {this.setState({ hours: float })}\n    handleTransport = (text) => {this.setState({ transport: text })}\n\n    openTransportModal = () =>{this.setState({isTransportModalVisible:true})}\n    toggleTransportModal = () =>{this.setState({isTransportModalVisible:!this.state.isTransportModalVisible})}\n    closeTransportModal = () =>{this.setState({isTransportModalVisible:false})}\n\n    openFoodModal = () =>{this.setState({isFoodModalVisible:true})}\n    toggleFoodModal = () =>{this.setState({isFoodModalVisible:!this.state.isFoodModalVisible})}\n    closeFoodModal = () =>{this.setState({isFoodModalVisible:false})}\n\n\n    render() {\n\n        const data = {\n            labels: ['Transport', 'Food', 'Total'],\n            data: [ 0.2, 0.45, 1 ]\n        }\n        const chartConfig = {\n            backgroundGradientFrom: '#1E2923',\n            backgroundGradientTo: '#08130D',\n            color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`\n        }\n        \n\n        if(!this.state.loading) {\n            return (\n                <View >\n                <ProgressChart\n                    data={data}\n                    width={360}\n                    height={220}\n                    chartConfig={chartConfig}\n                />\n\n\n                <View style={styles.inputLabels}>\n                <Text> </Text>\n                <TouchableOpacity    onPress={()=>this.openTransportModal()}    underlayColor=\"white\">\n                    <View style={styles.button}>\n                        <Ionicons name=\"ios-add-circle-outline\" size={24} color=\"white\" />\n                        <Text style={styles.buttonText}> Transport Emission</Text>\n                    </View>\n                </TouchableOpacity>\n                <Text> </Text>\n                <TouchableOpacity    onPress={()=>this.openFoodModal()}    underlayColor=\"white\">\n                    <View style={styles.button}>\n                        <Ionicons name=\"ios-add-circle-outline\" size={24} color=\"white\" />\n                        <Text style={styles.buttonText}> Food Emission</Text>\n                    </View>\n                </TouchableOpacity>\n                </View>\n                \n                \n                \n                \n                <View>\n                    <Modal animationIn=\"slideInUp\" \n                            animationOut=\"slideOutDown\" \n                            onBackdropPress={()=>this.closeTransportModal()}\n                            onSwipeComplete={()=>this.closeTransportModal()} \n                            swipeDirection=\"right\" \n                            isVisible={this.state.isTransportModalVisible} \n                            width=\"90%\"\n                            max-height=\"40%\"\n                            style={{backgroundColor:'white'}}>\n\n                    <View style={{ flex: 1,justifyContent:'center'}}>\n                        <Picker selectedValue = {this.state.transport} \n                            onValueChange = {this.updateTransport} \n                            style = {styles.input}>\n                                {this.state.transportData.map((transports, id) => {\n                                    return <Picker.Item \n                                        value={transports.item} \n                                        label={transports.description}\n                                        key={transports.id}    /> \n                                        }\n                                    )}\n                        </Picker>     \n                        <Text style = {styles.text}>Add Hours: </Text>\n                        <TextInput style = {styles.input}\n                            underlineColorAndroid = \"transparent\"\n                            placeholder = \" Hours (fe 1.3)\"\n                            placeholderTextColor = {Colors.primaryColor}\n                            autoCapitalize = \"none\"\n                            onChangeText = {this.handleHours}/>         \n                    </View>\n                    \n                    \n                    <View style={{ flex: 1,justifyContent:'center',position:'absolute',bottom:0}}>\n                            <View style={{flexDirection:'row',}}>\n                                <TouchableOpacity style={{backgroundColor:'red',width:'50%'}} onPress={()=>this.closeTransportModal()}>\n                                    <Text style={{color:'white',textAlign:'center',padding:10}}>Cancel</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity style={{backgroundColor:'green',width:'50%'}} onPress={()=>this.insertEnergy()}>\n                                    <Text style={{color:'white',textAlign:'center',padding:10}}>Ok</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                    </Modal>\n\n                </View>\n\n\n                <View>\n                    <Modal animationIn=\"slideInUp\" \n                            animationOut=\"slideOutDown\" \n                            onBackdropPress={()=>this.closeFoodModal()}\n                            onSwipeComplete={()=>this.closeFoodModal()} \n                            swipeDirection=\"right\" \n                            isVisible={this.state.isFoodModalVisible} \n                            width=\"90%\"\n                            max-height=\"40%\"\n                            style={{backgroundColor:'white'}}>\n\n                    <View style={{ flex: 1,justifyContent:'center'}}>\n                    <Picker selectedValue = {this.state.food} \n                            onValueChange = {this.updateFood} \n                            style = {styles.input}>\n                                {this.state.foodData.map((foods, id) => {\n                                    return <Picker.Item \n                                        value={foods.item} \n                                        label={foods.description}\n                                        key={foods.id}    /> \n                                        \n                                        }\n                                        )}\n                        </Picker>\n\n                        <Text style = {styles.text}>Add Hours: </Text>\n\n                        <TextInput style = {styles.input}\n                            underlineColorAndroid = \"transparent\"\n                            placeholder = \" Hours (fe 1.3)\"\n                            placeholderTextColor = {Colors.primaryColor}\n                            autoCapitalize = \"none\"\n                            onChangeText = {this.handleHours}/>         \n                    </View>\n\n                        <View style={{ flex: 1,justifyContent:'center',position:'absolute',bottom:0}}>\n                            <View style={{flexDirection:'row',}}>\n                                <TouchableOpacity style={{backgroundColor:'red',width:'50%'}} onPress={()=>this.closeFoodModal()}>\n                                    <Text style={{color:'white',textAlign:'center',padding:10}}>Cancel</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity style={{backgroundColor:'green',width:'50%'}} onPress={()=>this.insertEnergy()}>\n                                    <Text style={{color:'white',textAlign:'center',padding:10}}>Ok</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                    </Modal>\n\n                </View>\n                </View>\n\n            )\n        }\n        else{\n            return(<ActivityIndicator size={\"large\"} ></ActivityIndicator>)\n        }\n    }\n}\n\nCategoriesScreen.navigationOptions = navData => {\n    return {\n        headerTitle: 'My Energy',\n        headerLeft: (\n            <HeaderButtons HeaderButtonComponent={HeaderButton}>\n                <Item\n                    title=\"Menu\"\n                    iconName=\"ios-menu\"\n                    onPress={() => {\n                        navData.navigation.toggleDrawer();\n                    }}\n                />\n            </HeaderButtons>\n        )\n    };\n};\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'flex-start'\n    },\n    container: {\n            flex:1,\n\n    },\n    input: {\n            margin: 5,\n            height: 30,\n            borderColor: Colors.primaryColor,\n            borderWidth: 1\n    },\n    inputLabels:{\n        justifyContent: 'flex-start',\n        padding: 10\n    },\n    submitButton: {\n            backgroundColor: Colors.primaryColor,\n            padding: 10,\n            margin: 15,\n            height: 40,\n    },\n    submitButtonText:{\n            color: 'white'\n    },\n    modal: {\n        flex: 1,\n        width: 300,\n        height: 300,\n        alignItems: 'center',\n        backgroundColor: '#f7021a',\n },\n button: {\n\n    display: 'flex',\n    flexDirection: 'row',\n    height: 60,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    backgroundColor: '#2AC062',\n    shadowColor: '#2AC062',\n    shadowOpacity: 0.5,\n    shadowOffset: { \n        height: 10, \n        width: 0 \n    },\n    shadowRadius: 25,\n    backgroundColor:    Colors.primaryColor\n    },\n    buttonText: {\n        textAlign: 'center',\n        padding: 20,\n        color: 'white'\n    }\n\n\n});\n\nexport default CategoriesScreen;\n"]},"metadata":{},"sourceType":"module"}