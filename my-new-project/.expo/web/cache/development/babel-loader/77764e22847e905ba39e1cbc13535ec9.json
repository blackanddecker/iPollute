{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/my-new-project/screens/CategoriesScreen.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport HeaderButton from \"../components/HeaderButton\";\nimport Colors from \"../constants/Colors\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph } from 'react-native-chart-kit';\n\nvar CategoriesScreen = function (_Component) {\n  _inherits(CategoriesScreen, _Component);\n\n  var _super = _createSuper(CategoriesScreen);\n\n  function CategoriesScreen() {\n    var _this;\n\n    _classCallCheck(this, CategoriesScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: '',\n      password: '',\n      user: '',\n      transport: '',\n      hours: '',\n      transportData: [],\n      isLoading: true,\n      isDisabled: true\n    };\n\n    _this.componentDidMount = function () {\n      fetch('http://0.0.0.0:5000/getTransportObjects', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        for (var key in responseJson['transportObjects']) {\n          _this.state.transportData.push(responseJson['transportObjects'][key]);\n        }\n\n        _this.setState({\n          isLoading: !_this.state.isLoading\n        });\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"Transport data didnt fetch\");\n      });\n    };\n\n    _this.updateTransport = function (transport) {\n      _this.setState({\n        transport: transport\n      });\n    };\n\n    _this.handleEmail = function (text) {\n      _this.setState({\n        email: text\n      });\n    };\n\n    _this.handlePassword = function (text) {\n      _this.setState({\n        password: text\n      });\n    };\n\n    _this.handleHours = function (float) {\n      _this.setState({\n        hours: float\n      });\n    };\n\n    _this.handleTransport = function (text) {\n      _this.setState({\n        transport: text\n      });\n    };\n\n    _this.login = function (transport, hours) {\n      alert('Transport: ' + transport + ' Hours: ' + hours);\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoriesScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.transportData);\n      var data = [{\n        name: 'Seoul',\n        population: 21500000,\n        color: 'rgba(131, 167, 234, 1)',\n        legendFontColor: '#7F7F7F',\n        legendFontSize: 15\n      }, {\n        name: 'Toronto',\n        population: 2800000,\n        color: '#F00',\n        legendFontColor: '#7F7F7F',\n        legendFontSize: 15\n      }, {\n        name: 'Beijing',\n        population: 527612,\n        color: 'red',\n        legendFontColor: '#7F7F7F',\n        legendFontSize: 15\n      }, {\n        name: 'New York',\n        population: 8538000,\n        color: '#ffffff',\n        legendFontColor: '#7F7F7F',\n        legendFontSize: 15\n      }, {\n        name: 'Moscow',\n        population: 11920000,\n        color: 'rgb(0, 0, 255)',\n        legendFontColor: '#7F7F7F',\n        legendFontSize: 15\n      }];\n      var chartConfig = {\n        backgroundGradientFrom: '#1E2923',\n        backgroundGradientTo: '#08130D',\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(26, 255, 146, \" + opacity + \")\";\n        }\n      };\n\n      if (!this.state.loading) {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }\n        }, React.createElement(PieChart, {\n          style: styles.pieChart,\n          width: 600,\n          data: data,\n          height: 220,\n          chartConfig: chartConfig,\n          accessor: \"population\",\n          backgroundColor: \"transparent\",\n          paddingLeft: 15,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }\n        }), React.createElement(Text, {\n          style: styles.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }\n        }, \"Choose Transportation: \"), React.createElement(Picker, {\n          selectedValue: this.state.transport,\n          onValueChange: this.updateTransport,\n          style: styles.input,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }\n        }, this.state.transportData.map(function (transports, id) {\n          return React.createElement(Picker.Item, {\n            value: transports.item,\n            label: transports.description,\n            key: transports.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 26\n            }\n          });\n        })), React.createElement(Text, {\n          style: styles.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }\n        }, this.state.transport), React.createElement(Text, {\n          style: styles.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }\n        }, \"Add Hours: \"), React.createElement(TextInput, {\n          style: styles.input,\n          underlineColorAndroid: \"transparent\",\n          placeholder: \" Hours (fe 1.3)\",\n          placeholderTextColor: Colors.primaryColor,\n          autoCapitalize: \"none\",\n          onChangeText: this.handleHours,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }\n        }), React.createElement(Button, {\n          style: styles.submitButton,\n          onPress: function onPress() {\n            return _this2.login(_this2.state.transport, _this2.state.hours);\n          },\n          title: \"Submit\",\n          disabled: this.state.isDisabled,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }\n        }));\n      } else {\n        return React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }]);\n\n  return CategoriesScreen;\n}(Component);\n\nCategoriesScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'My Energy',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'left'\n  },\n  container: {\n    paddingTop: 5,\n    flex: 1\n  },\n  input: {\n    margin: 5,\n    height: 40,\n    borderColor: Colors.primaryColor,\n    borderWidth: 1\n  },\n  pieChart: {\n    padding: 10,\n    marging: 10\n  },\n  submitButton: {\n    backgroundColor: Colors.primaryColor,\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    color: 'white'\n  },\n  text: {\n    fontSize: 20,\n    alignSelf: \"flex-start\",\n    color: Colors.primaryColor,\n    padding: 15,\n    margin: 2\n  }\n});\nexport default CategoriesScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/my-new-project/screens/CategoriesScreen.js"],"names":["React","Component","HeaderButtons","Item","HeaderButton","Colors","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","CategoriesScreen","state","email","password","user","transport","hours","transportData","isLoading","isDisabled","componentDidMount","fetch","headers","method","then","response","json","responseJson","console","log","key","push","setState","catch","error","alert","updateTransport","handleEmail","text","handlePassword","handleHours","float","handleTransport","login","data","name","population","color","legendFontColor","legendFontSize","chartConfig","backgroundGradientFrom","backgroundGradientTo","opacity","loading","styles","container","pieChart","input","map","transports","id","item","description","primaryColor","submitButton","navigationOptions","navData","headerTitle","headerLeft","navigation","toggleDrawer","StyleSheet","create","screen","flex","justifyContent","alignItems","paddingTop","margin","height","borderColor","borderWidth","padding","marging","backgroundColor","submitButtonText","fontSize","alignSelf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  View,\n  Text,\n  TextInput,\n  ActivityIndicator,\n  StyleSheet,\n  Picker,\n  Button,\n} from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\n\nimport HeaderButton from '../components/HeaderButton';\nimport Colors from '../constants/Colors';\nimport {\n  LineChart,\n  BarChart,\n  PieChart,\n  ProgressChart,\n  ContributionGraph\n} from 'react-native-chart-kit'\n\nclass CategoriesScreen extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    user: '',\n    transport: '',\n    hours: '',\n    transportData: [],\n    isLoading: true,\n    isDisabled: true\n }\n\n \n  componentDidMount = () => {\n    fetch('http://0.0.0.0:5000/getTransportObjects', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      method: 'GET'\n    })\n    .then((response) => response.json())\n    .then((responseJson) => {\n      console.log(responseJson);\n      for (const key in responseJson['transportObjects']){\n        // console.log(\"key:\",responseJson['transportObjects'][key])\n        this.state.transportData.push(responseJson['transportObjects'][key])\n        }\n        this.setState({isLoading: !this.state.isLoading })\n    })\n    .catch((error) => {\n      console.error(error);\n      alert(\"Transport data didnt fetch\");\n\n    });\n  }\n\n  updateTransport = (transport) => {\n    this.setState({ transport: transport })\n  }\n\n  handleEmail = (text) => {\n    this.setState({ email: text })\n  }\n  handlePassword = (text) => {\n    this.setState({ password: text })\n  }\n  handleHours = (float) => {\n    this.setState({ hours: float })\n  }\n  handleTransport = (text) => {\n  this.setState({ transport: text })\n  }\n  login = (transport, hours) => {\n    alert('Transport: ' + transport + ' Hours: ' + hours)\n  }\n  render() {\n\n    console.log(this.state.transportData);\n    const data = [\n      { name: 'Seoul', population: 21500000, color: 'rgba(131, 167, 234, 1)', legendFontColor: '#7F7F7F', legendFontSize: 15 },\n      { name: 'Toronto', population: 2800000, color: '#F00', legendFontColor: '#7F7F7F', legendFontSize: 15 },\n      { name: 'Beijing', population: 527612, color: 'red', legendFontColor: '#7F7F7F', legendFontSize: 15 },\n      { name: 'New York', population: 8538000, color: '#ffffff', legendFontColor: '#7F7F7F', legendFontSize: 15 },\n      { name: 'Moscow', population: 11920000, color: 'rgb(0, 0, 255)', legendFontColor: '#7F7F7F', legendFontSize: 15 }\n    ]\n\n    const chartConfig = {\n      backgroundGradientFrom: '#1E2923',\n      backgroundGradientTo: '#08130D',\n      color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`\n    }\n    \n    if(!this.state.loading) {\n      return (\n        <View style = {styles.container}>\n            <PieChart\n              style={styles.pieChart}\n              width = {600}\n              data={data}\n              height={220}\n              chartConfig={chartConfig}\n              accessor=\"population\"\n              backgroundColor=\"transparent\"\n              paddingLeft={15}\n            />\n\n\n\n            <Text style = {styles.text}>Choose Transportation: </Text>\n\n            <Picker selectedValue = {this.state.transport} \n              onValueChange = {this.updateTransport} \n              style = {styles.input}>\n                {this.state.transportData.map((transports, id) => {\n                  return <Picker.Item \n                    value={transports.item} \n                    label={transports.description}\n                    key={transports.id}  /> \n                    \n                    }\n                    )}\n\n            </Picker>\n            <Text style = {styles.text}>{this.state.transport}</Text>\n\n            <Text style = {styles.text}>Add Hours: </Text>\n\n            <TextInput style = {styles.input}\n              underlineColorAndroid = \"transparent\"\n              placeholder = \" Hours (fe 1.3)\"\n              placeholderTextColor = {Colors.primaryColor}\n              autoCapitalize = \"none\"\n              onChangeText = {this.handleHours}/>\n\n            <Button\n              style = {styles.submitButton}\n              onPress = {() => this.login(this.state.transport, this.state.hours)}\n              title= \"Submit\" \n              disabled={this.state.isDisabled}\n              >\n            </Button>\n        </View>\n      )\n    }\n    else{\n      return(<ActivityIndicator size={\"large\"} ></ActivityIndicator>)\n    }\n  }\n}\n\nCategoriesScreen.navigationOptions = navData => {\n  return {\n    headerTitle: 'My Energy',\n    headerLeft: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName=\"ios-menu\"\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    )\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'left'\n  },\n  container: {\n      paddingTop: 5,\n      flex:1\n  },\n  input: {\n      margin: 5,\n      height: 40,\n      borderColor: Colors.primaryColor,\n      borderWidth: 1\n  },\n  pieChart:{\n    padding: 10,\n    marging: 10\n  },\n  submitButton: {\n      backgroundColor: Colors.primaryColor,\n      padding: 10,\n      margin: 15,\n      height: 40,\n  },\n  submitButtonText:{\n      color: 'white'\n  },\n  text: {\n    fontSize: 20,\n    alignSelf: \"flex-start\",\n    color: Colors.primaryColor,\n    padding: 15,\n    margin: 2\n }\n\n\n});\n\nexport default CategoriesScreen;\n"]},"metadata":{},"sourceType":"module"}