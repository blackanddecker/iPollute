{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/augmenta/Desktop/Project/my-new-project/screens/CategoriesScreen.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport HeaderButton from \"../components/HeaderButton\";\nimport { CATEGORIES } from \"../data/dummy-data\";\nimport CategoryGridTile from \"../components/CategoryGridTile\";\nimport Colors from \"../constants/Colors\";\n\nvar CategoriesScreen = function (_Component) {\n  _inherits(CategoriesScreen, _Component);\n\n  var _super = _createSuper(CategoriesScreen);\n\n  function CategoriesScreen() {\n    var _this;\n\n    _classCallCheck(this, CategoriesScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: '',\n      password: '',\n      user: '',\n      transport: 'Bus',\n      hours: '',\n      transportData: ''\n    };\n\n    _this.componentDidMount = function () {\n      fetch('http://127.0.0.1:5000/getTransportObjects', {\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this.setState({\n          transportData: responseJson\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n\n    _this.updateTransport = function (transport) {\n      _this.setState({\n        transport: transport\n      });\n    };\n\n    _this.handleEmail = function (text) {\n      _this.setState({\n        email: text\n      });\n    };\n\n    _this.handlePassword = function (text) {\n      _this.setState({\n        password: text\n      });\n    };\n\n    _this.handleHours = function (float) {\n      _this.setState({\n        hours: float\n      });\n    };\n\n    _this.handleTransport = function (text) {\n      _this.setState({\n        transport: text\n      });\n    };\n\n    _this.login = function (transport, hours) {\n      alert('Transport: ' + transport + ' Hours: ' + hours);\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoriesScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.transportData);\n      console.log(this.state.transportData['transportObjects']);\n      console.log(this.state.transportData['transportObjects'][0]);\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 8\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, \"Choose Transportation: \"), React.createElement(Picker, {\n        selectedValue: this.state.transport,\n        onValueChange: this.updateTransport,\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Bus\",\n        value: \"Bus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Train\",\n        value: \"Train\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Car\",\n        value: \"car\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Aeroplane\",\n        value: \"Aeroplane\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      })), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, this.state.transport), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, \"Add Hours: \"), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \" Hours (fe 1.3)\",\n        placeholderTextColor: Colors.primaryColor,\n        autoCapitalize: \"none\",\n        onChangeText: this.handleHours,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return _this2.login(_this2.state.transport, _this2.state.hours);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.submitButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 14\n        }\n      }, \" Submit \")));\n    }\n  }]);\n\n  return CategoriesScreen;\n}(Component);\n\nCategoriesScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'My Energy',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    paddingTop: 23\n  },\n  input: {\n    margin: 20,\n    height: 40,\n    borderColor: Colors.primaryColor,\n    borderWidth: 1\n  },\n  submitButton: {\n    backgroundColor: Colors.primaryColor,\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    color: 'white'\n  },\n  text: {\n    fontSize: 30,\n    alignSelf: 'left',\n    color: Colors.primaryColor,\n    padding: 10,\n    margin: 15\n  }\n});\nexport default CategoriesScreen;","map":{"version":3,"sources":["/home/augmenta/Desktop/Project/my-new-project/screens/CategoriesScreen.js"],"names":["React","Component","HeaderButtons","Item","HeaderButton","CATEGORIES","CategoryGridTile","Colors","CategoriesScreen","state","email","password","user","transport","hours","transportData","componentDidMount","fetch","method","then","response","json","responseJson","console","log","setState","catch","error","updateTransport","handleEmail","text","handlePassword","handleHours","float","handleTransport","login","alert","styles","container","input","primaryColor","submitButton","submitButtonText","navigationOptions","navData","headerTitle","headerLeft","navigation","toggleDrawer","StyleSheet","create","screen","flex","justifyContent","alignItems","paddingTop","margin","height","borderColor","borderWidth","backgroundColor","padding","color","fontSize","alignSelf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  View,\n  Text,\n  TextInput,\n  FlatList,\n  StyleSheet,\n  Picker,\n  TouchableOpacity\n} from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\n\nimport HeaderButton from '../components/HeaderButton';\nimport { CATEGORIES } from '../data/dummy-data';\nimport CategoryGridTile from '../components/CategoryGridTile';\nimport Colors from '../constants/Colors';\n\n\nclass CategoriesScreen extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    user: '',\n    transport: 'Bus',\n    hours: '',\n    transportData: ''\n }\n\n \n componentDidMount = () => {\n  fetch('http://127.0.0.1:5000/getTransportObjects', {\n     method: 'GET'\n  })\n  .then((response) => response.json())\n  .then((responseJson) => {\n     console.log(responseJson);\n     this.setState({\n      transportData: responseJson\n     })\n  })\n  .catch((error) => {\n     console.error(error);\n  });\n}\n\n updateTransport = (transport) => {\n    this.setState({ transport: transport })\n }\n\n handleEmail = (text) => {\n    this.setState({ email: text })\n }\n handlePassword = (text) => {\n    this.setState({ password: text })\n }\n handleHours = (float) => {\n  this.setState({ hours: float })\n}\nhandleTransport = (text) => {\n  this.setState({ transport: text })\n}\n login = (transport, hours) => {\n    alert('Transport: ' + transport + ' Hours: ' + hours)\n }\n render() {\n\n  console.log(this.state.transportData);\n  console.log(this.state.transportData['transportObjects']);\n  console.log(this.state.transportData['transportObjects'][0]);\n\n    return (\n       <View style = {styles.container}>\n          \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          <Text style = {styles.text}>Choose Transportation: </Text>\n\n          <Picker selectedValue = {this.state.transport} onValueChange = {this.updateTransport} style = {styles.input}>\n              <Picker.Item label = \"Bus\" value = \"Bus\" />\n              <Picker.Item label = \"Train\" value = \"Train\" />\n              <Picker.Item label = \"Car\" value = \"car\" />\n              <Picker.Item label = \"Aeroplane\" value = \"Aeroplane\" />\n\n          </Picker>\n          <Text style = {styles.text}>{this.state.transport}</Text>\n\n          <Text style = {styles.text}>Add Hours: </Text>\n\n          <TextInput style = {styles.input}\n             underlineColorAndroid = \"transparent\"\n             placeholder = \" Hours (fe 1.3)\"\n             placeholderTextColor = {Colors.primaryColor}\n             autoCapitalize = \"none\"\n             onChangeText = {this.handleHours}/>\n\n          <TouchableOpacity\n             style = {styles.submitButton}\n             onPress = {\n                () => this.login(this.state.transport, this.state.hours)\n             }>\n             <Text style = {styles.submitButtonText}> Submit </Text>\n          </TouchableOpacity>\n       </View>\n    )\n  }\n}\n\nCategoriesScreen.navigationOptions = navData => {\n  return {\n    headerTitle: 'My Energy',\n    headerLeft: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName=\"ios-menu\"\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    )\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n      paddingTop: 23\n  },\n  input: {\n      margin: 20,\n      height: 40,\n      borderColor: Colors.primaryColor,\n      borderWidth: 1\n  },\n  submitButton: {\n      backgroundColor: Colors.primaryColor,\n      padding: 10,\n      margin: 15,\n      height: 40,\n  },\n  submitButtonText:{\n      color: 'white'\n  },\n  text: {\n    fontSize: 30,\n    alignSelf: 'left',\n    color: Colors.primaryColor,\n    padding: 10,\n    margin: 15\n }\n\n\n});\n\nexport default CategoriesScreen;\n"]},"metadata":{},"sourceType":"module"}